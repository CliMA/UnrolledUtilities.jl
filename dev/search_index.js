var documenterSearchIndex = {"docs":
[{"location":"comparison_tables_preamble/","page":"-","title":"-","text":"The following autogenerated tables contain a representative set of potential use cases for this package, along with measurements that summarize each case's performance, compilation, and memory usage:","category":"page"},{"location":"comparison_tables_preamble/","page":"-","title":"-","text":"run time (best of several trial measurements)\ncompilation time (as reported by the compiler)\noverall level of optimization (type stability, constant propagation, etc.) and allocations during run time (as reported by the garbage collector)\ntotal allocations during compilation and first run (as reported by the garbage collector and, when possible, the Julia process's resident set size estimator)","category":"page"},{"location":"comparison_tables_preamble/","page":"-","title":"-","text":"The rows of the tables are highlighted as follows:","category":"page"},{"location":"comparison_tables_preamble/","page":"-","title":"-","text":"<span style=\"color:darkturquoise\">light blue </span>\nindicates better optimization and either an improvement or no change in run time, compilation time, and total allocations\n<span style=\"color:royalblue\">dark blue </span>\nindicates better optimization and either slower run time, slower compilation, or more total allocations\n<span style=\"color:mediumseagreen\">green </span>\nindicates similar optimization, either faster run time or fewer allocations during run time, and either an improvement or no change in compilation time and total allocations\n<span style=\"color:khaki\">yellow </span>\nindicates similar optimization, either faster run time or fewer allocations during run time, and either slower compilation or more total allocations\n<span style=\"color:mediumorchid\">magenta </span>\nindicates no change in performance and either an improvement or no change in compilation time and total allocations\n<span style=\"color:silver\">light gray </span>\nindicates no change in performance and either faster compilation with more total allocations or slower compilation with fewer total allocations\n<span style=\"color:gray\">dark gray </span>\nindicates no change in performance, compilation time, or total allocations\n<span style=\"color:indianred\">red </span>\nindicates a deterioration in performance, or no change in performance and either slower compilation or more total allocations","category":"page"},{"location":"comparison_tables_preamble/","page":"-","title":"-","text":"Rows highlighted in gray present no clear advantage to loop unrolling, while those highlighted in red present a clear disadvantage. It is recommended that you only call unrolled functions when your use case is similar to a row in one of the remaining categories, each of which demonstrates some advantage to loop unrolling.","category":"page"},{"location":"comparison_tables_preamble/","page":"-","title":"-","text":"The tables are also printed out by this package's test suite, so they can be compared across different operating systems by consulting the CI pipeline.","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"CurrentModule = UnrolledUtilities","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"using UnrolledUtilities, InteractiveUtils, Test\nnonuniform_itr = ((1, 2), (1, 2, 3));\nnested_itr_of_depth_2 = ((1, 2), (3, 4));\nnested_itr_of_depth_3 = (((1,), (2,)), ((3,), (4,)));","category":"page"},{"location":"user_guide/#When-to-Use-UnrolledUtilities","page":"User Guide","title":"When to Use UnrolledUtilities","text":"","category":"section"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"The functions and types exported by this package tend to perform better than their counterparts from Base and Base.Iterators in the scenarios listed below. Additional examples and more precise measurements can be found in the automatically generated tables of benchmarks.","category":"page"},{"location":"user_guide/#Outline:","page":"User Guide","title":"Outline:","text":"","category":"section"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"Pages = [\"user_guide.md\"]\nDepth = 2:3","category":"page"},{"location":"user_guide/#When-to-Use-Unrolled-Functions","page":"User Guide","title":"When to Use Unrolled Functions","text":"","category":"section"},{"location":"user_guide/#Long-iterators","page":"User Guide","title":"Long iterators","text":"","category":"section"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"map has an unstable return type for iterators with lengths greater than 32:\nTest.@inferred map(one, Tuple(1:31));\nTest.@inferred map(one, Tuple(1:32));\nTest.@inferred unrolled_map(one, Tuple(1:32));\ngetindex has an unstable return type for Core.Const slices of length N > 10 from iterators with lengths greater than N + 2:\nfirst_11(itr) = itr[1:11]\nTest.@inferred first_11(Tuple(1:13));\nTest.@inferred first_11(Tuple(1:14));\nunrolled_first_11(itr) = unrolled_take(itr, Val(11))\nTest.@inferred unrolled_first_11(Tuple(1:14));\nFor benchmarks that indicate performance improvements when using unrolled functions with long iterators, see Isolated Unrolled Functions","category":"page"},{"location":"user_guide/#Iterators-with-elements-of-different-types","page":"User Guide","title":"Iterators with elements of different types","text":"","category":"section"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"in, any, all, foreach, and other functions in Base have intermediate type instabilities that trigger allocations for nonuniform iterators:\nnonuniform_itr = ((1, 2), (1, 2, 3));\n() in nonuniform_itr # hide\n@allocated () in nonuniform_itr\nunrolled_in((), nonuniform_itr) # hide\n@allocated unrolled_in((), nonuniform_itr)\nany(isempty, nonuniform_itr) # hide\n@allocated any(isempty, nonuniform_itr)\nunrolled_any(isempty, nonuniform_itr) # hide\n@allocated unrolled_any(isempty, nonuniform_itr)\ngetindex has an unstable return type for nonuniform iterators when given non-constant (i.e., not Core.Const) indices, which can lead to intermediate type instabilities that trigger allocations:\nfunction add_lengths(itr)\n    length_sum = 0\n    for n in 1:length(itr)\n        length_sum += length(itr[n])\n    end\nend\nadd_lengths(nonuniform_itr) # hide\n@allocated add_lengths(nonuniform_itr)\nfunction unrolled_add_lengths(itr)\n    length_sum = 0\n    for n in 1:length(itr)\n        length_sum += unrolled_applyat(length, n, itr)\n    end\nend\nunrolled_add_lengths(nonuniform_itr) # hide\n@allocated unrolled_add_lengths(nonuniform_itr)\nnote: Note\nHow can unrolled_applyat be stable if n isn't a Core.Const?For the example of add_lengths, the compiler must infer the return type of itr[::Int64] before it can compile the call to length. Since this return type depends on the index n, the compiler needs to insert a runtime lookup into the method table that determines which method of length to call, length(::Tuple{Int64, Int64}) or length(::Tuple{Int64, Int64, Int64}), and this triggers allocations.For the example of unrolled_add_lengths, the compiler instead infers the return types of itr[::Core.Const(1)], itr[::Core.Const(2)], and so on for every index into itr. Then, it compiles a call to length for each of these return types, and it inserts a runtime switch instruction that determines which result of length to return for a particular value of n. As long as length itself only returns one type (in this case, Int64), this ensures that unrolled_add_lengths has no intermediate type instabilities.In other words, unrolled_applyat combines multiple methods for length and getindex into a single method, replacing the inefficient method table lookup that switches between them with a simpler switch instruction.\ntip: Tip\nWhen should getindex be replaced with unrolled_applyat?The specific example above can be simplified by using unrolled_sum, instead of using a for-loop in conjunction with unrolled_applyat:nonuniform_itr = ((1, 2), (1, 2, 3));\nunrolled_sum(length, nonuniform_itr) # hide\n@allocated unrolled_sum(length, nonuniform_itr)However, there are often situations in which loops cannot be replaced with function calls, such as when the loops are parallelized over multiple threads. For example, since CUDA is unable to compile kernels with type instabilities, something like the switch instruction in unrolled_applyat is required in order to parallelize over nonuniform iterators on GPUs.\nFor benchmarks that indicate performance improvements when using unrolled functions with nonuniform iterators, see Isolated Unrolled Functions and Nested Unrolled Functions","category":"page"},{"location":"user_guide/#Reductions-with-intermediate-values-of-different-types","page":"User Guide","title":"Reductions with intermediate values of different types","text":"","category":"section"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"reduce and accumulate have unstable return types when the return type of the reduction operator is not constant, but only for iterators with lengths greater than 32:\nTest.@inferred reduce(tuple, Tuple(1:32));\nTest.@inferred reduce(tuple, Tuple(1:33));\nTest.@inferred unrolled_reduce(tuple, Tuple(1:33));\nFor benchmarks that indicate performance improvements when using unrolled functions with nonuniform reductions, see Isolated Unrolled Functions","category":"page"},{"location":"user_guide/#Functions-with-recursion-during-compilation","page":"User Guide","title":"Functions with recursion during compilation","text":"","category":"section"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"Any function that recursively calls itself with different types of arguments can trigger a compilation heuristic called the \"recursion limit\", which causes the compiler to generate code with type instabilities and allocations\nBefore Julia 1.11, the default recursion limit applied to every function with at least 3 levels of recursion during compilation, including relatively simple functions like an analogue of length for nested Tuples:\nnested_itr_of_depth_2 = ((1, 2), (3, 4));\nnested_itr_of_depth_3 = (((1,), (2,)), ((3,), (4,)));\nrecursive_length(itr) =\n    eltype(itr) <: Tuple ? sum(recursive_length, itr) : length(itr)\nTest.@inferred recursive_length(nested_itr_of_depth_2);\nTest.@inferred recursive_length(nested_itr_of_depth_3);\nAs of Julia 1.11, the default recursion limit is no longer triggered for this simple example, but still applies to more complex recursive functions:\nrecursive_sum_with_logs(itr) =\n    eltype(itr) <: Tuple ?\n    sum(recursive_sum_with_logs, itr) +\n    sum(log ∘ recursive_sum_with_logs, itr) :\n    sum(itr)\nTest.@inferred recursive_sum_with_logs(nested_itr_of_depth_2);\nTest.@inferred recursive_sum_with_logs(nested_itr_of_depth_3);\nunrolled_recursive_sum_with_logs(itr) =\n    eltype(itr) <: Tuple ?\n    unrolled_sum(unrolled_recursive_sum_with_logs, itr) +\n    unrolled_sum(log ∘ unrolled_recursive_sum_with_logs, itr) :\n    unrolled_sum(itr)\nTest.@inferred unrolled_recursive_sum_with_logs(nested_itr_of_depth_3);\nnote: Note\nHow can the default recursion limit be avoided?The recursion limit of any function f can be disabled by evaluating the following code in the module where f is defined:@static if hasfield(Method, :recursion_relation)\n    for method in methods(f)\n        method.recursion_relation = Returns(true)\n    end\nendHowever, the recursion limits of functions defined in Base cannot be modified from any module outside of Base. Since the default limit applies to all functions from Base, they can have unstable return types whenever they need more than 2 levels of recursion for compilation, even if the user-defined functions passed to them have no recursion limits. The only way to avoid the default limit of a function from Base is to replace it with a function whose limit has been disabled (such as an analogous function from UnrolledUtilities).\nFor benchmarks that indicate performance improvements when using unrolled functions with recursive operations, see Recursive Unrolled Functions","category":"page"},{"location":"user_guide/#When-to-Use-StaticOneTo-and-StaticBitVector","page":"User Guide","title":"When to Use StaticOneTo and StaticBitVector","text":"","category":"section"},{"location":"user_guide/#Iterators-of-Ints-from-1-to-N","page":"User Guide","title":"Iterators of Ints from 1 to N","text":"","category":"section"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"StaticOneTo","category":"page"},{"location":"user_guide/#UnrolledUtilities.StaticOneTo","page":"User Guide","title":"UnrolledUtilities.StaticOneTo","text":"StaticOneTo(N)\n\nA lazy and statically sized analogue of Base.OneTo(N).\n\nThis iterator can only store the integers from 1 to N, so its output_type_for_promotion is NoOutputType(). An efficient method is provided for unrolled_take, but no other unrolled functions can use StaticOneTos as output types.\n\n\n\n\n\n","category":"type"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"If an iterator only contains the integers from 1 to N ≥ 0, it is possible to provide the compiler with the values in the iterator in addition to their types by using a StaticOneTo, as opposed to a Tuple or something similar. This can allow the compiler to fully optimize out code that depends on those values, essentially moving the code's execution from run time to compilation time:","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"@code_llvm debuginfo=:none mapreduce(abs2, +, (1, 2, 3))\n@code_llvm debuginfo=:none mapreduce(abs2, +, StaticOneTo(3))","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"Standard library functions can sometimes take advantage of this optimization, but for most non-trivial operations it is necessary to use unrolled functions:","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"@code_llvm debuginfo=:none mapreduce(log, +, StaticOneTo(3))\n@code_llvm debuginfo=:none unrolled_mapreduce(log, +, StaticOneTo(3))","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"For benchmarks that indicate performance improvements when using StaticOneTos, see Very Long Iterators.","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"note: Note\nCan the compiler infer iterator values in other scenarios?The compiler can usually infer the values of iterators that only contain singletons when they are accessed using Core.Const indices, but this is not possible for non-singletons (e.g., integers) unless some special type of iterator is used (e.g., a StaticOneTo).","category":"page"},{"location":"user_guide/#Long-iterators-of-Bools-that-get-modified-across-loop-iterations","page":"User Guide","title":"Long iterators of Bools that get modified across loop iterations","text":"","category":"section"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"StaticBitVector","category":"page"},{"location":"user_guide/#UnrolledUtilities.StaticBitVector","page":"User Guide","title":"UnrolledUtilities.StaticBitVector","text":"StaticBitVector{N, [U]}(f)\nStaticBitVector{N, [U]}([bit])\n\nA statically sized analogue of BitVector with Unsigned chunks of type U, which can be constructed using either a function f(n) or a constant bit. By default, U is set to UInt8 and bit is set to false.\n\nThis iterator can only store Bools, so its output_type_for_promotion is a ConditionalOutputType. Efficient implementations are provided for all unrolled functions, though the methods for unrolled_map and unrolled_accumulate only apply when the first item in the output is a Bool.\n\n\n\n\n\n","category":"type"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"Loops in Julia often allocate memory when a value larger than 32 bytes in size is modified across loop iterations (regardless of whether the loops are unrolled or not). Since Bools are represented by bytes, this limits certain types of loops to modifying bitmasks of no more than 32 Bools in order to avoid allocations. Unlike an iterator of Bools, though, a StaticBitVector stores 8 bits in every byte, which makes it possible to modify up to 256 bits at a time in loops without any allocations:","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"random_bit_flips(itr) = reduce(\n    (itr′, i) -> Base.setindex(itr′, !itr′[rand(1:i)], i),\n    1:length(itr);\n    init = itr,\n)\n@allocated random_bit_flips(ntuple(Returns(true), Val(32))) # hide\n@allocated random_bit_flips(ntuple(Returns(true), Val(32)))\n@allocated random_bit_flips(ntuple(Returns(true), Val(33))) # hide\n@allocated random_bit_flips(ntuple(Returns(true), Val(33)))\n@allocated random_bit_flips(StaticBitVector{256}(true)) # hide\n@allocated random_bit_flips(StaticBitVector{256}(true))","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"As with StaticOneTos, standard library functions can occasionally optimize StaticBitVectors as well as unrolled functions, but most complex use cases require unrolled functions.","category":"page"},{"location":"user_guide/","page":"User Guide","title":"User Guide","text":"For benchmarks that indicate performance improvements when using long StaticBitVectors that get modified across loop iterations, see Nested Unrolled Closures.","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"using UnrolledUtilities, InteractiveUtils, Test","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"macro code_warntype(_...) nothing end\nmacro code_llvm(_...) nothing end","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"<style>\nsummary {\n  background-color: #3c5dcd;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  list-style-position: outside;\n  list-style-type: \"⬇\";\n}\nsummary::after {\n  content: \"Click to show long output\";\n  margin-left: 15px;\n}\ndetails[open] summary {\n  list-style-type: \"⬆\";\n}\ndetails[open] summary::after {\n  content: none;\n}\n</style>","category":"page"},{"location":"introduction/#Motivation-for-Loop-Unrolling","page":"Introduction","title":"Motivation for Loop Unrolling","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Although the iteration utilities in Base and Base.Iterators are sufficiently performant for most common use cases, those who choose to dive into the world of low-level optimization will often discover type instabilities in unexpected situations. Here is a particularly simple example:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Test.@inferred map(one, Tuple(1:31));\nTest.@inferred map(one, Tuple(1:32));","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"This type instability is present in all maps over iterators with lengths greater than 31, regardless of whether they are statically sized. As with most type instabilities in Julia, this leads to memory allocations every time map is called with sufficiently long iterators.","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Test.@inferred is helpful for checking whether the return type of a function call is stable, but looking directly at the generated LLVM code reveals just how different the two function calls above are:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"@code_llvm debuginfo=:none map(one, Tuple(1:31))","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"<details><summary>","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"@code_llvm debuginfo=:none map(one, Tuple(1:32))","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"</summary>","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"@code_llvm debuginfo=:none map(one, Tuple(1:32)) # hide","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"</details><br>","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"The type instability (and all of the resulting LLVM code complexity) in the second function call can be eliminated by replacing map with unrolled_map:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Test.@inferred unrolled_map(one, Tuple(1:32));\n@code_llvm debuginfo=:none unrolled_map(one, Tuple(1:32))","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"The minimum iterator length for type instability is not always 32; for instance, it can also be 14:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"first_11(itr) = itr[1:11]\nTest.@inferred first_11(Tuple(1:13));\nTest.@inferred first_11(Tuple(1:14));","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"note: Note\nWhy is the function definition needed in this example?On the first line of the example above, [1:11] is enclosed in a function so that it does not get evaluated in global scope. This turns the range 1:11 into a Core.Const, which the compiler can propagate into the call to getindex in order to infer the length of the result:using InteractiveUtils\nfirst_11(itr) = itr[1:11]@code_warntype first_11(Tuple(1:13))In contrast, running Test.@inferred Tuple(1:13)[1:11] would amount to checking whether the compiler can compute the result type of getindex given only the argument types NTuple{13, Int64} and UnitRange{Int64}, which it cannot do:<details><summary>@code_warntype Tuple(1:13)[1:11]</summary>@code_warntype Tuple(1:13)[1:11] # hide</details><br>","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Although itr[1:10] is always inferrable when itr is a Tuple, itr[1:11] has a type instability whenever itr contains more than 13 items. More generally, itr[1:N] seems to be unstable for all N > 10 whenever itr contains more than N + 2 items. This type instability can be fixed by replacing getindex with unrolled_take:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"unrolled_first_11(itr) = unrolled_take(itr, Val(11))\nTest.@inferred unrolled_first_11(Tuple(1:14));","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Even when the final result of a function is inferred, there can be intermediate steps in the function with type instabilities that trigger allocations:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"function add_lengths(itr)\n    length_sum = 0\n    for n in 1:length(itr)\n        length_sum += length(itr[n])\n    end\nend\nTest.@inferred add_lengths(((1, 2), (1, 2, 3)))\n@allocated add_lengths(((1, 2), (1, 2, 3)))\n@code_warntype add_lengths(((1, 2), (1, 2, 3)))","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"The output of @code_warntype is quite cluttered, but the most important detail here is that the call to getindex does not get inferred because it can result in either a Tuple of length 2 or a Tuple of length 3. This type instability can be fixed by replacing getindex with unrolled_applyat:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"function unrolled_add_lengths(itr)\n    length_sum = 0\n    for n in 1:length(itr)\n        length_sum += unrolled_applyat(length, n, itr)\n    end\nend\nunrolled_add_lengths(((1, 2), (1, 2, 3))) # hide\n@allocated unrolled_add_lengths(((1, 2), (1, 2, 3)))\n@code_warntype unrolled_add_lengths(((1, 2), (1, 2, 3)))","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"For a detailed breakdown of when the tools provided by this package can improve performance, see the User Guide.","category":"page"},{"location":"introduction/#What-Does-Loop-Unrolling-Do","page":"Introduction","title":"What Does Loop Unrolling Do","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"When a loop over N indices is unrolled, it gets compiled into N lines of LLVM code, where each line has a constant (Core.Const) index. For example, an unrolled loop that prints every integer from 1 to 33 is compiled into the following:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"<details><summary>","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"@code_llvm debuginfo=:none unrolled_foreach(println, Tuple(1:33))","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"</summary>","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"@code_llvm debuginfo=:none unrolled_foreach(println, Tuple(1:33)) # hide","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"</details><br>","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"This LLVM code consists of 33 getelementptr instructions (each of which extracts a value from a Tuple at a particular index), 33 load instructions, and 33 call instructions (each of which switches execution to println). Every getelementptr instruction has a constant index between 0 and 32; in more complex examples where the call instructions get inlined, this constant index can be propagated into the LLVM code of the function being called. On the other hand, here is the LLVM code for the non-unrolled version of this loop:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"@code_llvm debuginfo=:none foreach(println, Tuple(1:33))","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"This LLVM code has a load instruction to get the first value and a getelementptr instruction with a non-constant integer index to get all other values. It also has conditional jump instructions for checking whether the last index has been reached after each load and getelementptr instruction.","category":"page"},{"location":"introduction/#Downsides-of-Loop-Unrolling","page":"Introduction","title":"Downsides of Loop Unrolling","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Given the performance benefits of loop unrolling, it might seem at first that the standard library needs more of it. However, the standard library is not just meant for writing high-performance code with statically sized iterators—many of its use cases involve code that is only executed once or several times. In such cases, most of the execution time is required for compilation, and minimizing run time makes no practical difference. Although unrolled functions can occasionally be faster to compile than non-unrolled functions, they are typically slower to compile, which means that using them instead of standard library functions can often increase total execution time:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"tup32 = ntuple(Returns((1, 2)), 32);\n@elapsed map(first, tup32)\n@elapsed unrolled_map(first, tup32)","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"The increase in compilation time is usually no more than a factor of 5 for small iterators, but it grows as iterator length increases:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"tup320 = ntuple(Returns((1, 2)), 320);\n@elapsed map(first, tup320)\n@elapsed unrolled_map(first, tup320)","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Loop unrolling can also theoretically increase the run time of a function in addition to its compilation time, since unrolled assembly code requires more space and takes longer to load than non-unrolled code. In practice, though, the constant propagation enabled by unrolling usually compensates for this slowdown.","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"So, when type instabilities and memory allocations need to be removed (as is required for static compilation) and the cost to total execution time is more or less irrelevant, using unrolled functions is probably worthwhile. Otherwise, if a significant increase in compilation time (and potentially also run time) needs to be avoided, using standard library functions might be a better option.","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"It is usually a good idea to compare the performance of unrolled code against non-unrolled code before settling on a particular design. Many examples of such comparisons can be found in the tables of benchmarks that are automatically generated for this package.","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"CurrentModule = UnrolledUtilities","category":"page"},{"location":"developer_guide/#How-to-Unroll","page":"Developer Guide","title":"How to Unroll","text":"","category":"section"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"There are two general ways to implement loop unrolling in Julia—recursively splatting iterator contents and manually constructing unrolled expressions. For example, a recursively unrolled version of the foreach function is","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"unrolled_foreach(f, itr) = _unrolled_foreach(f, itr...)\n_unrolled_foreach(f) = nothing\n_unrolled_foreach(f, item, items...) = (f(item); _unrolled_foreach(f, items...))","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"In contrast, a manually unrolled implementation of this function looks like","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"unrolled_foreach(f, itr) = _unrolled_foreach(Val(length(itr)), f, itr)\n@generated _unrolled_foreach(::Val{N}, f, itr) where {N} =\n    Expr(:block, (:(f(generic_getindex(itr, $n))) for n in 1:N)..., nothing)","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"Julia's compiler can only pass up to 32 values through function arguments without allocating heap memory, so recursive unrolling is not type-stable for iterators with lengths greater than 32. However, automatically generating functions often requires more time and memory resources during compilation than writing hard-coded functions. Recursive inlining adds overhead to compilation as well, but this is typically smaller than the overhead of generated functions for short iterators. To avoid sacrificing latency by using generated functions, several hard-coded methods can be added to the manually unrolled implementation:","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"_unrolled_foreach(::Val{0}, f, itr) = nothing\n_unrolled_foreach(::Val{1}, f, itr) = (f(generic_getindex(itr, 1)); nothing)\n_unrolled_foreach(::Val{2}, f, itr) =\n    (f(generic_getindex(itr, 1)); f(generic_getindex(itr, 2)); nothing)\n_unrolled_foreach(::Val{3}, f, itr) =\n    (f(generic_getindex(itr, 1)); f(generic_getindex(itr, 2)); f(generic_getindex(itr, 3)); nothing)","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"With this modification, manual unrolling does not exceed the compilation requirements of recursive unrolling across a wide range of use cases. Since it also avoids type instabilities for arbitrarily large iterators, a combination of hard-coded and generated functions with manual unrolling serves as the basis of all unrolled functions defined in this package. Similarly, the ntuple(f, ::Val{N}) function in Base uses this strategy to implement loop unrolling.","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"For benchmarks that compare these two implementations, see Manual vs. Recursive Unrolling.","category":"page"},{"location":"developer_guide/#Interface-API","page":"Developer Guide","title":"Interface API","text":"","category":"section"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"The functions exported by this package can be used with any statically sized iterators, as long as those iterators make appropriate use of the following interface:","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"generic_getindex\noutput_type_for_promotion\nAmbiguousOutputType\nNoOutputType\nConditionalOutputType\noutput_promote_rule\nconstructor_from_tuple\nempty_output\nStaticSequence","category":"page"},{"location":"developer_guide/#UnrolledUtilities.generic_getindex","page":"Developer Guide","title":"UnrolledUtilities.generic_getindex","text":"generic_getindex(itr, n)\n\nIdentical to getindex(itr, n), but with the added ability to handle lazy iterator types defined in the standard library, such as Base.Generator and Iterators.Enumerate.\n\n\n\n\n\n","category":"function"},{"location":"developer_guide/#UnrolledUtilities.output_type_for_promotion","page":"Developer Guide","title":"UnrolledUtilities.output_type_for_promotion","text":"output_type_for_promotion(itr)\n\nThe type of output that unrolled functions should try to generate for the input iterator itr, or a ConditionalOutputType if the output type depends on the type of items that need to be stored in it, or NoOutputType() if itr is a lazy iterator without any associated output type. Defaults to Tuple.\n\n\n\n\n\n","category":"function"},{"location":"developer_guide/#UnrolledUtilities.AmbiguousOutputType","page":"Developer Guide","title":"UnrolledUtilities.AmbiguousOutputType","text":"AmbiguousOutputType\n\nThe result of output_type_for_promotion for iterators that do not have well-defined output types.\n\n\n\n\n\n","category":"type"},{"location":"developer_guide/#UnrolledUtilities.NoOutputType","page":"Developer Guide","title":"UnrolledUtilities.NoOutputType","text":"NoOutputType()\n\nThe AmbiguousOutputType of lazy iterators.\n\n\n\n\n\n","category":"type"},{"location":"developer_guide/#UnrolledUtilities.ConditionalOutputType","page":"Developer Guide","title":"UnrolledUtilities.ConditionalOutputType","text":"ConditionalOutputType(allowed_item_type, output_type, [fallback_type])\n\nAn AmbiguousOutputType that can have one of two possible values. If the first item in the output is a subtype of allowed_item_type, the output will have the type output_type; otherwise, it will have the type fallback_type, which is set to Tuple by default.\n\n\n\n\n\n","category":"type"},{"location":"developer_guide/#UnrolledUtilities.output_promote_rule","page":"Developer Guide","title":"UnrolledUtilities.output_promote_rule","text":"output_promote_rule(output_type1, output_type2)\n\nThe type of output that should be generated when two iterators do not have the same output_type_for_promotion, or Union{} if these iterators should not be used together. Only one method of output_promote_rule needs to be defined for any pair of output types.\n\nBy default, all types take precedence over NoOutputType(), and the conditional part of any ConditionalOutputType takes precedence over an unconditional type (so that only the fallback_type of any conditional type gets promoted). The default result for all other pairs of unequal output types is Union{}.\n\n\n\n\n\n","category":"function"},{"location":"developer_guide/#UnrolledUtilities.constructor_from_tuple","page":"Developer Guide","title":"UnrolledUtilities.constructor_from_tuple","text":"constructor_from_tuple(output_type)\n\nA function that can be used to efficiently construct an output of type output_type from a Tuple, or identity if such an output should not be constructed from a Tuple. Defaults to identity, which also handles the case where output_type is already Tuple. The output_type here is guaranteed to be a Type, rather than a ConditionalOutputType or NoOutputType.\n\nMany statically sized iterators (e.g., SVectors) are essentially wrappers for Tuples, and their constructors for Tuples can be reduced to no-ops. The main exceptions are StaticOneTos and StaticBitVectors, which do not provide constructors for Tuples because there is no performance benefit to making a lazy or low-storage data structure once a corresponding high-storage data structure has already been constructed.\n\n\n\n\n\n","category":"function"},{"location":"developer_guide/#UnrolledUtilities.empty_output","page":"Developer Guide","title":"UnrolledUtilities.empty_output","text":"empty_output(output_type)\n\nAn empty output of type output_type. Defaults to applying the constructor_from_tuple for the given type to an empty Tuple.\n\n\n\n\n\n","category":"function"},{"location":"developer_guide/#UnrolledUtilities.StaticSequence","page":"Developer Guide","title":"UnrolledUtilities.StaticSequence","text":"StaticSequence{N}\n\nAbstract type that can represent any iterable of constant length N. Subtypes include the low-storage data structures StaticOneTo and StaticBitVector, which have optimized methods for certain unrolled functions.\n\n\n\n\n\n","category":"type"},{"location":"developer_guide/#How-to-Use-the-Interface","page":"Developer Guide","title":"How to Use the Interface","text":"","category":"section"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"To unroll over a statically sized iterator of some user-defined type T, follow these steps:","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"Add a method for getindex(::T, n), or for generic_getindex(::T, n) if getindex should not be defined for iterators of type T\nIf every unrolled function that needs to construct an iterator when given an iterator of type T can return a Tuple instead, stop here\nOtherwise, to return a non-Tuple iterator whenever it is efficient to do so, follow these steps:\nAdd a method for output_type_for_promotion(::T) = O, where O can be T, a supertype of T, some other Type, or an AmbiguousOutputType\nIf an iterator whose output type is O can be used together with an iterator whose output type is O′, add a method for output_promote_rule(O, O′)\nIf O is a NoOutputType, stop here\nOtherwise, to handle the unambiguous output type U that underlies O (where U is equivalent to O unless O is a ConditionalOutputType), follow these steps:\nIf an iterator of type U can be efficiently constructed from a Tuple, add a method for constructor_from_tuple(U)\nOtherwise, for each of the following functions, add a method if it can be implemented to construct an iterator of type U without first storing the iterator's contents in a Tuple:\nempty_output(U)\nunrolled_push_into(U, itr, item)\nunrolled_append_into(U, itr1, itr2)\nunrolled_take_into(U, itr, val_N)\nunrolled_drop_into(U, itr, val_N)\nunrolled_map_into(U, f, itr)\nunrolled_accumulate_into(U, op, itr, init, transform)","category":"page"},{"location":"developer_guide/","page":"Developer Guide","title":"Developer Guide","text":"note: Note\nWhen a relevant method for the interface is not defined, unrolled functions will typically fall back to using Tuples instead of other iterator types.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using UnrolledUtilities","category":"page"},{"location":"#UnrolledUtilities.jl","page":"Home","title":"UnrolledUtilities.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A toolkit for low-level optimization of Julia code in which iterator sizes are known during compilation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package can be used with all statically sized iterators (Tuples, NamedTuples, StaticArrays, etc.), including ones that are very long or ones that have elements of different types, both of which are cases that Julia's standard library often handles inefficiently. For example, the standard libary function in performs worse than this package's unrolled_in for Tuples with elements of different types:","category":"page"},{"location":"","page":"Home","title":"Home","text":"nonuniform_itr = ((1, 2), (1, 2, 3));\n() in nonuniform_itr # hide\n@allocated () in nonuniform_itr\nunrolled_in((), nonuniform_itr) # hide\n@allocated unrolled_in((), nonuniform_itr)","category":"page"},{"location":"","page":"Home","title":"Home","text":"The loop unrolling automatically performed by this package offers the following benefits for statically sized iterators:","category":"page"},{"location":"","page":"Home","title":"Home","text":"better support for static compilation\ncompilation of executables\ncompilation of GPU kernels\nbetter performance (usually)\nreduced run times\nreduced memory footprints while code is running\nbetter compilation efficiency (occasionally)\nreduced compilation times\nreduced memory footprints while code is compiling","category":"page"},{"location":"","page":"Home","title":"Home","text":"To find out more about loop unrolling and when it is useful, see the Introduction.","category":"page"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package exports a number of analogues to functions from Base and Base.Iterators, each of which has been optimized for statically sized iterators (in terms of both performance and compilation time):","category":"page"},{"location":"","page":"Home","title":"Home","text":"unrolled_push(itr, item)—similar to push!, but non-mutating\nunrolled_append(itr, itrs...)—similar to append!, but non-mutating\nunrolled_prepend(itr, itrs...)—similar to prepend!, but non-mutating\nunrolled_map(f, itrs...)—similar to map\nunrolled_any([f], itr)—similar to any\nunrolled_all([f], itr)—similar to all\nunrolled_foreach(f, itrs...)—similar to foreach\nunrolled_reduce(op, itr; [init])—similar to reduce (i.e., foldl)\nunrolled_mapreduce(f, op, itrs...; [init])—similar to mapreduce (i.e., mapfoldl)\nunrolled_accumulate(op, itr; [init])—similar to accumulate\nunrolled_in(item, itr)—similar to in\nunrolled_unique([f], itr)—similar to unique\nunrolled_allunique([f], itr)—similar to allunique\nunrolled_allequal([f], itr)—similar to allequal\nunrolled_sum([f], itr; [init])—similar to sum, but with init = 0 when itr is empty\nunrolled_prod([f], itr; [init])—similar to prod, but with init = 1 when itr is empty\nunrolled_cumsum([f], itr)—similar to cumsum, but with an optional f\nunrolled_cumprod([f], itr)—similar to cumprod, but with an optional f\nunrolled_count([f], itr)—similar to count\nunrolled_maximum([f], itr)—similar to maximum\nunrolled_minimum([f], itr)—similar to minimum\nunrolled_extrema([f], itr)—similar to extrema\nunrolled_findmax([f], itr)—similar to findmax\nunrolled_findmin([f], itr)—similar to findmin\nunrolled_argmax([f], itr)—similar to argmax\nunrolled_argmin([f], itr)—similar to argmin\nunrolled_findfirst([f], itr)—similar to findfirst\nunrolled_findlast([f], itr)—similar to findlast\nunrolled_filter(f, itr)—similar to filter\nunrolled_flatten(itr)—similar to Iterators.flatten\nunrolled_flatmap(f, itrs...)—similar to Iterators.flatmap\nunrolled_product(itrs...)—similar to Iterators.product\nunrolled_cycle(itr, ::Val{N})—similar to Iterators.cycle, but with a static value of N\nunrolled_partition(itr, ::Val{N})—similar to Iterators.partition, but with a static value of N\nunrolled_take(itr, ::Val{N})—similar to Iterators.take (i.e., itr[1:N]), but with a static value of N\nunrolled_drop(itr, ::Val{N})—similar to Iterators.drop (i.e., itr[(N + 1):end]), but with a static value of N","category":"page"},{"location":"","page":"Home","title":"Home","text":"In addition, this package exports several functions that do not have analogues in Base or Base.Iterators:","category":"page"},{"location":"","page":"Home","title":"Home","text":"unrolled_applyat(f, n, itrs...)—similar to f(itrs[1][n], itrs[2][n], ...)\nunrolled_argfirst(f, itr)—similar to itr[findfirst(f, itr)]\nunrolled_arglast(f, itr)—similar to itr[findlast(f, itr)]\nunrolled_split(f, itr)—similar to (filter(f, itr), filter(!f, itr)), but without duplicate calls to f","category":"page"},{"location":"","page":"Home","title":"Home","text":"These unrolled functions are compatible with the following types of iterators:","category":"page"},{"location":"","page":"Home","title":"Home","text":"statically sized iterators from Base (e.g., Tuple and NamedTuple)\nstatically sized iterators from StaticArrays (e.g., SVector and MVector)\nlazy iterators from Base (e.g., the results of generator expressions, Iterators.map, Iterators.reverse, enumerate, and zip) that are used as wrappers for statically sized iterators","category":"page"},{"location":"","page":"Home","title":"Home","text":"They are also compatible with two new types of statically sized iterators exported by this package:","category":"page"},{"location":"","page":"Home","title":"Home","text":"StaticOneTo—similar to Base.OneTo\nStaticBitVector—similar to BitVector","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the User Guide for additional information about these new types of iterators.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Developer Guide to learn how user-defined iterator types can be made compatible with unrolled functions.","category":"page"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"The following autogenerated tables contain a representative set of potential use cases for this package, along with measurements that summarize each case's performance, compilation, and memory usage:","category":"page"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"run time (best of several trial measurements)\ncompilation time (as reported by the compiler)\noverall level of optimization (type stability, constant propagation, etc.) and allocations during run time (as reported by the garbage collector)\ntotal allocations during compilation and first run (as reported by the garbage collector and, when possible, the Julia process's resident set size estimator)","category":"page"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"The rows of the tables are highlighted as follows:","category":"page"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"<span style=\"color:darkturquoise\">light blue </span>\nindicates better optimization and either an improvement or no change in run time, compilation time, and total allocations\n<span style=\"color:royalblue\">dark blue </span>\nindicates better optimization and either slower run time, slower compilation, or more total allocations\n<span style=\"color:mediumseagreen\">green </span>\nindicates similar optimization, either faster run time or fewer allocations during run time, and either an improvement or no change in compilation time and total allocations\n<span style=\"color:khaki\">yellow </span>\nindicates similar optimization, either faster run time or fewer allocations during run time, and either slower compilation or more total allocations\n<span style=\"color:mediumorchid\">magenta </span>\nindicates no change in performance and either an improvement or no change in compilation time and total allocations\n<span style=\"color:silver\">light gray </span>\nindicates no change in performance and either faster compilation with more total allocations or slower compilation with fewer total allocations\n<span style=\"color:gray\">dark gray </span>\nindicates no change in performance, compilation time, or total allocations\n<span style=\"color:indianred\">red </span>\nindicates a deterioration in performance, or no change in performance and either slower compilation or more total allocations","category":"page"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"Rows highlighted in gray present no clear advantage to loop unrolling, while those highlighted in red present a clear disadvantage. It is recommended that you only call unrolled functions when your use case is similar to a row in one of the remaining categories, each of which demonstrates some advantage to loop unrolling.","category":"page"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"The tables are also printed out by this package's test suite, so they can be compared across different operating systems by consulting the CI pipeline.","category":"page"},{"location":"comparison_tables/#Isolated-Unrolled-Functions","page":"Comparison Tables","title":"Isolated Unrolled Functions","text":"","category":"section"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"<div style=\"width: max(80vw, 100%)\">\n<table style = \"font-family: monospace; font-size: 70%;\">\n  <thead>\n    <tr class = \"header headerLastRow\">\n      <th style = \"text-align: left;\">Unrolled Expression</th>\n      <th style = \"text-align: left;\">Reference Expression</th>\n      <th style = \"text-align: left;\">Itr Type</th>\n      <th style = \"text-align: left;\">Itr Length</th>\n      <th style = \"text-align: left;\">Itr Contents</th>\n      <th style = \"text-align: left;\">Optimization</th>\n      <th style = \"text-align: left;\">Run Time</th>\n      <th style = \"text-align: left;\">Compilation Time</th>\n      <th style = \"text-align: left;\">Total Allocations</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 31 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">Inf times more (51 kB vs. 0 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">541 times more (51 kB vs. 96 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (10 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (28 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1392 times more (131 kB vs. 96 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">250 times more (51 kB vs. 208 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">233 times more (51 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">206 times more (52 kB vs. 256 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">123 times more (54 kB vs. 448 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">52 times more (64 kB vs. 1 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">615 times more (135 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">494 times more (139 kB vs. 288 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (15 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 50 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (28 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">372 times more (152 kB vs. 416 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (39 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (69 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (31 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">185 times more (214 kB vs. 1 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (44 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (5 μs vs. 5 μs)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (30 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">33 times more (143 kB vs. 4 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (33 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">464 times more (51 kB vs. 112 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">407 times more (51 kB vs. 128 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">329 times more (51 kB vs. 160 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">156 times more (54 kB vs. 352 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">56 times more (64 kB vs. 1 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">250 times more (51 kB vs. 208 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">233 times more (51 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">206 times more (52 kB vs. 256 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">123 times more (54 kB vs. 448 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">52 times more (64 kB vs. 1 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (13 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (28 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">538 times more (135 kB vs. 256 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (19 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (35 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">356 times more (139 kB vs. 400 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (32 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 69 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (30 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">198 times more (152 kB vs. 784 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (107 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (89 ns vs. 80 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">80 times more (215 kB vs. 3 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_push(itr, itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., itr[1])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (44 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (6 μs vs. 6 μs)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">14 times more (155 kB vs. 11 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (52 ms vs. 35 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">29 times more (3 MB vs. 108 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (10 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (45 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">17 times more (3 MB vs. 208 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (64 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (64 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">24 times more (3 MB vs. 140 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 7 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">189 times less (49 ns vs. 9 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (67 ms vs. 32 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">25 times more (4 MB vs. 147 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">17 times more (4 MB vs. 208 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (22 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (58 ms vs. 38 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">16 times more (4 MB vs. 233 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (37 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (57 ms vs. 37 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">17 times more (4 MB vs. 234 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (181 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (80 ns vs. 80 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (66 ms vs. 37 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">25 times more (6 MB vs. 237 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (641 LLVM lines vs. 17 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">62 times less (221 ns vs. 14 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (179 ms vs. 36 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">53 times more (13 MB vs. 251 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (64 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (62 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 139 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (62 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 140 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">24 times more (3 MB vs. 141 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 7 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">429 times less (40 ns vs. 17 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (68 ms vs. 32 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">25 times more (4 MB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (66 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 139 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 140 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (65 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">24 times more (3 MB vs. 141 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 7 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">365 times less (49 ns vs. 18 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (68 ms vs. 32 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">25 times more (4 MB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (15 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">15 times more (4 MB vs. 234 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (58 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">16 times more (4 MB vs. 235 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (46 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (69 ns vs. 69 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (59 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">17 times more (4 MB vs. 238 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (169 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (120 ns vs. 110 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (81 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">21 times more (6 MB vs. 275 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_append(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(itr..., Iterators.reverse(itr)...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1110 LLVM lines vs. 560 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">103 times less (621 ns vs. 64 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">13 times more (471 ms vs. 36 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">16 times more (13 MB vs. 792 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (52 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">29 times more (3 MB vs. 108 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (53 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (10 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (44 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">17 times more (4 MB vs. 208 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">24 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (64 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">24 times more (3 MB vs. 140 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 7 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">187 times less (49 ns vs. 9 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (67 ms vs. 32 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">25 times more (4 MB vs. 147 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">17 times more (4 MB vs. 208 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (21 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (57 ms vs. 37 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">16 times more (4 MB vs. 233 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 50 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (58 ms vs. 38 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">18 times more (4 MB vs. 234 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (180 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (80 ns vs. 80 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (75 ms vs. 37 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">27 times more (6 MB vs. 237 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (642 LLVM lines vs. 17 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">62 times less (221 ns vs. 14 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (180 ms vs. 36 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">59 times more (15 MB vs. 251 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (64 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (68 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 139 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 140 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (65 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">24 times more (3 MB vs. 141 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 7 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">431 times less (40 ns vs. 17 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (66 ms vs. 32 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">25 times more (4 MB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 138 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (62 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 139 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (63 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (3 MB vs. 140 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (64 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">24 times more (3 MB vs. 141 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 7 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">366 times less (49 ns vs. 18 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (67 ms vs. 33 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">25 times more (4 MB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (15 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (61 ms vs. 37 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">16 times more (4 MB vs. 234 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (27 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (58 ms vs. 44 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">16 times more (4 MB vs. 235 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (46 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 69 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (61 ms vs. 37 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">17 times more (4 MB vs. 238 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (171 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (120 ns vs. 120 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (92 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (6 MB vs. 275 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_prepend(itr, Iterators.reverse(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">(Iterators.reverse(itr)..., itr...)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1110 LLVM lines vs. 560 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">113 times less (581 ns vs. 66 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">11 times more (437 ms vs. 37 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">18 times more (15 MB vs. 792 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">351 times more (77 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (26 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">351 times more (77 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">522 times more (114 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">647 times more (202 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">651 times more (204 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (44 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">690 times more (227 kB vs. 336 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (40 ns vs. 350 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (41 ms vs. 40 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (251 kB vs. 720 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">20 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (42 ms vs. 40 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (350 kB vs. 720 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (30 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1289 times more (342 kB vs. 272 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (30 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1232 times more (385 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (42 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1020 times more (510 kB vs. 512 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (20 LLVM lines vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">15 times less (49 ns vs. 751 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (42 ms vs. 41 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (656 kB vs. 720 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (68 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">40 times less (60 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (49 ms vs. 40 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (1 MB vs. 723 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">923 times more (202 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (28 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">654 times more (205 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">693 times more (228 kB vs. 336 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 192 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">13 times less (40 ns vs. 530 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (39 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (252 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 576 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32 times less (49 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (350 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (30 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">647 times more (202 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">654 times more (204 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (39 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">692 times more (227 kB vs. 336 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 192 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">49 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (252 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 576 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">192 times less (40 ns vs. 8 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ms vs. 68 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (350 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1384 times more (368 kB vs. 272 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (30 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">823 times more (386 kB vs. 480 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (17 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (41 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">584 times more (448 kB vs. 784 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (55 LLVM lines vs. 18 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">46 times less (69 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (44 ms vs. 81 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (658 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_take(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1:length(itr) ÷ 2]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (206 LLVM lines vs. 268 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">272 times less (110 ns vs. 30 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (66 ms vs. 82 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (35 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1903 times more (416 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2037 times more (446 kB vs. 224 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (33 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2320 times more (580 kB vs. 256 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1426 times more (446 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1476 times more (461 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (47 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1579 times more (518 kB vs. 336 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (49 ns vs. 360 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (53 ms vs. 39 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (706 kB vs. 720 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">25 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (65 ms vs. 39 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (1 MB vs. 720 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 50 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (33 ms vs. 31 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2183 times more (580 kB vs. 272 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (34 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2025 times more (633 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (44 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1560 times more (780 kB vs. 512 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (21 LLVM lines vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (60 ns vs. 761 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (50 ms vs. 39 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 720 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">35 times less (69 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (54 ms vs. 39 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (2 MB vs. 723 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1429 times more (447 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1482 times more (463 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1585 times more (520 kB vs. 336 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 192 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (40 ns vs. 511 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (50 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (707 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 576 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">39 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (69 ms vs. 67 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1429 times more (447 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1481 times more (463 kB vs. 320 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (47 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1584 times more (520 kB vs. 336 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 192 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">39 times less (49 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (51 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (707 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 576 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">154 times less (49 ns vs. 8 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (61 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (33 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2040 times more (606 kB vs. 304 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (13 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (34 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">1194 times more (635 kB vs. 544 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: indianred; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (20 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (46 ms vs. 26 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">806 times more (718 kB vs. 912 B)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (57 LLVM lines vs. 18 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">45 times less (69 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (48 ms vs. 82 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_drop(itr, Val(length(itr) ÷ 2))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[length(itr) ÷ 2 + 1:end]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (208 LLVM lines vs. 268 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">154 times less (190 ns vs. 29 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (72 ms vs. 81 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (32 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">18 times more (171 kB vs. 9 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (32 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (205 kB vs. 40 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">18 times more (237 kB vs. 13 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (34 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (207 kB vs. 42 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (49 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (264 kB vs. 96 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (49 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (285 kB vs. 300 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">15 times less (49 ns vs. 741 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (51 ms vs. 31 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (390 kB vs. 294 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">30 times less (80 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (75 ms vs. 33 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (1 MB vs. 297 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">12 times more (244 kB vs. 20 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (42 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (334 kB vs. 157 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (41 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (436 kB vs. 586 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">15 times less (49 ns vs. 751 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (43 ms vs. 32 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (583 kB vs. 294 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">30 times less (80 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (64 ms vs. 32 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (2 MB vs. 296 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (32 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (207 kB vs. 42 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (48 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (274 kB vs. 106 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (306 kB vs. 344 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">23 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (50 ms vs. 33 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (414 kB vs. 318 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">50 times less (80 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (73 ms vs. 41 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (1 MB vs. 320 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (34 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (212 kB vs. 47 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (49 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (279 kB vs. 111 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (49 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (310 kB vs. 349 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">23 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (50 ms vs. 33 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (420 kB vs. 322 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">49 times less (80 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (72 ms vs. 35 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (1 MB vs. 325 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (25 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (269 kB vs. 46 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (42 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (335 kB vs. 159 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (385 kB vs. 622 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 33 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">59 times less (49 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (43 ms vs. 33 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (598 kB vs. 332 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">map(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 528 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">484 times less (80 ns vs. 39 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (66 ms vs. 35 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (2 MB vs. 827 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (55 kB vs. 159 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (88 kB vs. 279 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (62 kB vs. 335 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (92 kB vs. 448 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (154 kB vs. 448 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (178 kB vs. 448 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (48 ms vs. 32 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (322 kB vs. 448 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (897 kB vs. 448 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (70 kB vs. 519 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (166 kB vs. 544 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (44 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (271 kB vs. 544 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (457 kB vs. 544 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (54 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (1 MB vs. 545 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (85 kB vs. 375 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (144 kB vs. 498 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (158 kB vs. 802 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (246 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (72 ms vs. 29 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (595 kB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (96 kB vs. 529 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 41 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (166 kB vs. 936 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (203 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 65 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (346 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (59 ms vs. 36 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (920 kB vs. 501 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (99 kB vs. 530 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (44 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (179 kB vs. 946 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (232 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 79 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (482 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">any(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">875 times less (40 ns vs. 35 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (55 ms vs. 37 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ms vs. 70 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ms vs. 70 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (67 ms vs. 71 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (48 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ns vs. 80 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (92 ms vs. 81 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (168 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (140 ns vs. 150 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (98 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (410 ns vs. 450 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (130 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (66 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (48 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 ns vs. 80 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 87 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (168 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (140 ns vs. 150 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (94 ms vs. 77 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (430 ns vs. 450 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (124 ms vs. 75 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (90 ms vs. 85 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (48 LLVM lines vs. 96 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">27 times less (80 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (90 ms vs. 106 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (168 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">160 times less (140 ns vs. 22 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (99 ms vs. 114 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (3 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">3 times less (430 ns vs. 2 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (134 ms vs. 74 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 86 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (48 LLVM lines vs. 96 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">163 times less (80 ns vs. 13 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (90 ms vs. 106 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (168 LLVM lines vs. 496 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">560 times less (150 ns vs. 84 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (98 ms vs. 115 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (3 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">4 times less (410 ns vs. 2 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (128 ms vs. 74 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (68 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 86 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (48 LLVM lines vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">200 times less (70 ns vs. 14 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (87 ms vs. 109 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (168 LLVM lines vs. 38 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">710 times less (140 ns vs. 100 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (97 ms vs. 131 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (4 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">any((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (648 LLVM lines vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">88 times less (410 ns vs. 36 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (127 ms vs. 76 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (55 kB vs. 164 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (88 kB vs. 281 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (62 kB vs. 324 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (90 kB vs. 330 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (147 kB vs. 330 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (162 kB vs. 330 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (249 kB vs. 330 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (600 kB vs. 330 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (63 kB vs. 374 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (146 kB vs. 399 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (225 kB vs. 399 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (45 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (248 kB vs. 399 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (599 kB vs. 400 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (92 kB vs. 413 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (150 kB vs. 540 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (165 kB vs. 856 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (252 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (603 kB vs. 506 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (90 kB vs. 396 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (148 kB vs. 523 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (162 kB vs. 839 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (250 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (601 kB vs. 345 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (88 kB vs. 395 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (147 kB vs. 535 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (161 kB vs. 894 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">14 times less (249 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (600 kB vs. 412 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ms vs. 70 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 70 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (73 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ms vs. 71 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (48 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (92 ms vs. 77 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (168 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (98 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (131 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (67 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (48 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 76 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (168 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (94 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (125 ms vs. 74 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">8</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (48 LLVM lines)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">6 times less (49 ns vs. 330 ns)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (92 ms vs. 77 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">32</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (168 LLVM lines)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">17 times less (49 ns vs. 872 ns)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (98 ms vs. 78 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (128 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (90 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">8</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (48 LLVM lines)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">45 times less (49 ns vs. 2 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (91 ms vs. 75 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">32</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (168 LLVM lines)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">56 times less (49 ns vs. 3 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (97 ms vs. 79 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (136 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (67 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (48 LLVM lines vs. 560 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">47 times less (49 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (88 ms vs. 78 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (168 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">66 times less (49 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (97 ms vs. 93 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">all((x-&gt;length(x) == rand(8:10)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (648 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (126 ms vs. 76 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (66 kB vs. 541 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (99 kB vs. 578 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (73 kB vs. 725 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (102 kB vs. 580 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (67 ms vs. 71 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (158 kB vs. 587 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (172 kB vs. 604 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (68 ms vs. 69 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (260 kB vs. 698 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (72 ms vs. 74 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (610 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (80 kB vs. 729 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (169 kB vs. 773 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (266 kB vs. 803 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (395 kB vs. 999 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 56 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 69 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (111 kB vs. 604 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (68 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (196 kB vs. 667 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ms vs. 71 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (252 kB vs. 763 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (74 ms vs. 73 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (339 kB vs. 856 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 54 LLVM lines w/ Const)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (72 ms vs. 78 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (688 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 71 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (116 kB vs. 606 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (68 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (200 kB vs. 669 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (67 ms vs. 71 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (256 kB vs. 765 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (68 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (344 kB vs. 860 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 54 LLVM lines w/ Const)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">35 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (71 ms vs. 83 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (692 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (114 kB vs. 778 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (198 kB vs. 839 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (272 kB vs. 954 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (465 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">884 times less (40 ns vs. 35 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (70 ms vs. 61 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (27 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">26 times less (78 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (27 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">19 times less (107 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">14 times less (222 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (27 ms vs. 56 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">22 times less (109 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 ms vs. 58 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 ms vs. 57 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 59 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 35 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">101 times less (40 ns vs. 4 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (59 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 50 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (242 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (3 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (132 LLVM lines vs. 70 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">127 times less (89 ns vs. 11 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (103 ms vs. 48 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (28 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">26 times less (109 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 58 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (52 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 40 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">153 times less (40 ns vs. 6 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (58 ms vs. 64 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (28 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">26 times less (109 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 59 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (53 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (54 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 39 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">185 times less (40 ns vs. 7 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (59 ms vs. 64 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (267 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (17 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (105 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (80 ns vs. 89 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (66 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (3 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_reduce(tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">reduce(tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (625 LLVM lines vs. 784 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">306 times less (351 ns vs. 108 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (194 ms vs. 50 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (5 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (27 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">28 times less (91 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (27 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">21 times less (121 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (256 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (28 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">22 times less (122 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 60 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 61 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 64 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 35 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">101 times less (40 ns vs. 4 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (59 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (276 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 50 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ns vs. 50 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 58 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (3 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (132 LLVM lines vs. 70 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">129 times less (80 ns vs. 10 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (93 ms vs. 52 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (29 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">25 times less (122 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 ms vs. 63 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (52 ms vs. 63 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (54 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 39 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">160 times less (40 ns vs. 6 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (59 ms vs. 68 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (28 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">25 times less (122 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 63 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (53 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (53 ms vs. 65 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 39 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">191 times less (40 ns vs. 8 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (60 ms vs. 70 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (301 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (17 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 50 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 56 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (105 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (80 ns vs. 89 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (3 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_reduce(tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">reduce(tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (625 LLVM lines vs. 784 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">324 times less (350 ns vs. 114 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (186 ms vs. 53 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (44 ms vs. 80 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (379 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 80 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (413 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (10 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (683 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (44 ms vs. 84 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (431 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 91 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 108 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (94 ms vs. 197 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (55 LLVM lines w/ Const vs. 68 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">119 times less (80 ns vs. 10 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (190 ms vs. 89 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (16 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 56 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (736 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 58 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (84 ms vs. 59 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (196 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ns vs. 80 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (97 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (772 LLVM lines vs. 140 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">61 times less (250 ns vs. 15 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (175 ms vs. 61 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (9 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 84 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (437 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (86 ms vs. 92 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 108 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (92 ms vs. 196 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (55 LLVM lines w/ Const vs. 70 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">232 times less (89 ns vs. 21 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (197 ms vs. 94 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (7 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 86 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (442 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 92 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 111 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (91 ms vs. 197 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (55 LLVM lines w/ Const vs. 70 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">346 times less (80 ns vs. 28 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (193 ms vs. 98 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (15 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 58 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (784 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 61 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 64 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (169 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (110 ns vs. 110 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (108 ms vs. 79 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (881 LLVM lines vs. 855 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">330 times less (421 ns vs. 139 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (283 ms vs. 82 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (10 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 85 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (407 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 85 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (441 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (10 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (729 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 90 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (458 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 97 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 109 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (93 ms vs. 201 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (55 LLVM lines w/ Const vs. 68 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">103 times less (89 ns vs. 9 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (192 ms vs. 95 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (16 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (781 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (86 ms vs. 62 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 50 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 65 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (196 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ns vs. 70 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (94 ms vs. 78 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (772 LLVM lines vs. 140 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">62 times less (250 ns vs. 16 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (174 ms vs. 66 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (9 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 88 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (465 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (86 ms vs. 96 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 110 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (93 ms vs. 202 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (55 LLVM lines w/ Const vs. 70 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">259 times less (81 ns vs. 21 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (194 ms vs. 100 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 90 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (469 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (86 ms vs. 98 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 113 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (94 ms vs. 202 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (55 LLVM lines w/ Const vs. 70 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">342 times less (80 ns vs. 27 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (201 ms vs. 97 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (7 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (15 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (829 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 65 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 67 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (169 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (100 ns vs. 110 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (107 ms vs. 81 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce((x-&gt;(x, length(x))), tuple, itr; init = ())</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (881 LLVM lines vs. 855 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">334 times less (411 ns vs. 137 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (281 ms vs. 68 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (10 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 41 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (128 kB vs. 481 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 41 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (158 kB vs. 511 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 41 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (364 kB vs. 896 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (160 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (264 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 96 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (288 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (62 ms vs. 290 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">24 times less (430 kB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (391 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (562 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (737 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (857 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (240 ns vs. 330 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (301 ms vs. 461 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (1 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (160 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (265 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 104 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (288 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (61 ms vs. 287 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">25 times less (431 kB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (160 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (264 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 100 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (288 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (66 ms vs. 289 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">25 times less (431 kB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (13 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (417 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (564 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (86 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (80 ns vs. 80 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (72 ms vs. 74 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (676 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (2796 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (2 μs vs. 2 μs)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (1 s vs. 843 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (1 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (142 kB vs. 816 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (171 kB vs. 847 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (398 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (174 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (277 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 89 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (301 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (62 ms vs. 278 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">23 times less (444 kB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (426 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (598 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ns vs. 69 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 53 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (771 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (857 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (280 ns vs. 270 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (290 ms vs. 442 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (1 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (174 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (278 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 91 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (302 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (60 ms vs. 280 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">24 times less (445 kB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (174 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 59 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (278 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 93 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (302 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (63 ms vs. 283 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">24 times less (444 kB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (13 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 ms vs. 42 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (452 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (599 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (86 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (89 ns vs. 80 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ms vs. 65 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (710 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(tuple, itr; init = ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (2795 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (2 μs vs. 2 μs)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (1 s vs. 797 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (1 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (19 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (19 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 57 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 50 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (67 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (75 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (94 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (20 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (119 ms vs. 58 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (15 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 55 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (22 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (95 ms vs. 54 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (22 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (118 ms vs. 53 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (15 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 69 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (72 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 69 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 69 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (90 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (94 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (22 LLVM lines w/ switch)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (125 ms vs. 53 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (15 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (72 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (90 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 69 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 69 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (98 ms vs. 60 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (22 LLVM lines w/ switch)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (123 ms vs. 54 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (15 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (27 LLVM lines w/ switch vs. 48 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (68 ms vs. 53 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (22 LLVM lines w/ switch vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 89 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (92 ms vs. 54 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (24 LLVM lines w/ switch vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (90 ms vs. 54 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (24 LLVM lines w/ switch vs. 1 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (69 ns vs. 100 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (93 ms vs. 54 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(length, rand(1:7:length(itr)), itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">length(itr[rand(1:7:length(itr))])</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (24 LLVM lines w/ switch vs. 4 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (120 ns vs. 240 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (121 ms vs. 54 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (15 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">nothing in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (30 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (131 kB vs. 48 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (161 kB vs. 163 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (26 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (137 kB vs. 193 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (41 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (165 kB vs. 282 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (48 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (227 kB vs. 282 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 31 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (253 kB vs. 282 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (404 kB vs. 282 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">nothing in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (59 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (1010 kB vs. 282 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nothing in itr</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (146 kB vs. 325 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (44 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (241 kB vs. 350 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (347 kB vs. 350 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (532 kB vs. 350 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">nothing in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (1 MB vs. 350 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (33 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (192 kB vs. 313 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (57 ms vs. 40 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (311 kB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (65 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (418 kB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (66 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (569 kB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">nothing in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (75 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (1 MB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (33 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (192 kB vs. 313 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (57 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (310 kB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (65 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (418 kB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: gray; text-align: left;\">nothing in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (67 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (569 kB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">nothing in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (75 ms vs. 35 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (1 MB vs. 338 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nothing in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (40 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (24 ms vs. 29 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (197 kB vs. 379 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nothing in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 400 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (40 ns vs. 130 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (43 ms vs. 30 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (322 kB vs. 406 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nothing in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 250 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (43 ms vs. 32 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (444 kB vs. 407 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nothing in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 32 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">52 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (47 ms vs. 36 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (693 kB vs. 437 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(nothing, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nothing in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">697 times less (49 ns vs. 34 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (55 ms vs. 31 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 927 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (31 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (136 kB vs. 33 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (165 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (287 kB vs. 259 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (31 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (167 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (224 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (239 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (326 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (59 ms vs. 31 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (676 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (332 kB vs. 334 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 31 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (479 kB vs. 359 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 31 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (704 kB vs. 359 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (2 MB vs. 359 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (82 ms vs. 40 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">15 times more (5 MB vs. 359 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (31 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (167 kB vs. 148 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (225 kB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (240 kB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (53 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (327 kB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (60 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (676 kB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (31 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (167 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (225 kB vs. 253 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (240 kB vs. 253 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (327 kB vs. 253 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (676 kB vs. 253 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 ms vs. 32 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (372 kB vs. 389 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (6 LLVM lines vs. 32 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 69 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (48 ms vs. 38 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (523 kB vs. 567 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (6 LLVM lines vs. 32 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 69 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (48 ms vs. 37 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (700 kB vs. 567 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (6 LLVM lines vs. 32 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (52 ms vs. 37 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 567 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_in(itr[1], itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[1] in itr</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (6 LLVM lines vs. 32 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (40 ns vs. 80 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (65 ms vs. 37 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (3 MB vs. 567 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (31 ms vs. 25 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (136 kB vs. 33 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (31 ms vs. 31 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (165 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (287 kB vs. 259 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (31 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (167 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 31 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (224 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (239 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 31 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (326 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (62 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (676 kB vs. 252 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (332 kB vs. 334 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 32 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (479 kB vs. 359 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 32 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (704 kB vs. 359 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (56 ms vs. 37 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (2 MB vs. 359 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (6 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (83 ms vs. 41 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">15 times more (5 MB vs. 359 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (34 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (197 kB vs. 413 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (315 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (240 kB vs. 149 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (417 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (64 ms vs. 39 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (706 kB vs. 697 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (35 ms vs. 38 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (261 kB vs. 503 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (315 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 ms vs. 31 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (240 kB vs. 253 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (417 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (63 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (770 kB vs. 892 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (6 LLVM lines vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (40 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (33 ms vs. 33 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (357 kB vs. 407 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (6 LLVM lines vs. 608 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 220 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ms vs. 42 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (509 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (6 LLVM lines vs. 32 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 70 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ms vs. 37 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (700 kB vs. 567 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (6 LLVM lines vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 260 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (54 ms vs. 46 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_in(itr[end], itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[end] in itr</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (6 LLVM lines vs. 4 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times less (49 ns vs. 290 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (68 ms vs. 38 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (3 MB vs. 670 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 384 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 230 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (31 ms vs. 85 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (382 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 384 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 230 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (31 ms vs. 86 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">11 times less (415 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 280 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (32 ms vs. 83 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (642 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 384 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (40 ns vs. 230 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (41 ms vs. 88 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (1 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 384 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 240 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (66 ms vs. 86 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 384 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 260 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (64 ms vs. 85 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 384 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 310 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (67 ms vs. 87 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 384 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">13 times less (40 ns vs. 521 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (73 ms vs. 91 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (60 ns vs. 290 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (37 ms vs. 84 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 290 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (63 ms vs. 86 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (60 ns vs. 310 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (62 ms vs. 85 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (49 ns vs. 350 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (64 ms vs. 84 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">11 times less (49 ns vs. 581 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (76 ms vs. 84 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (9 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 270 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (44 ms vs. 102 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (40 ns vs. 341 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 97 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">11 times less (40 ns vs. 461 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (154 ms vs. 103 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (9 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">19 times less (40 ns vs. 791 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (186 ms vs. 96 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (13 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">51 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (189 ms vs. 98 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (14 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (40 ns vs. 270 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (41 ms vs. 97 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (40 ns vs. 410 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (79 ms vs. 112 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">27 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (139 ms vs. 138 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (9 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">41 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (187 ms vs. 131 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (13 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">74 times less (40 ns vs. 3 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (195 ms vs. 134 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (14 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (11 LLVM lines vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (60 ns vs. 360 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (37 ms vs. 98 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (17 LLVM lines vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (50 ns vs. 521 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (71 ms vs. 114 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (26 LLVM lines vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">25 times less (69 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (105 ms vs. 140 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (11 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (26 LLVM lines vs. 33 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">59 times less (60 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (118 ms vs. 138 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (18 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_unique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(unique(length, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (26 LLVM lines vs. 522 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">631 times less (60 ns vs. 38 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (143 ms vs. 143 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (29 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 210 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (27 ms vs. 111 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">35 times less (207 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 220 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (27 ms vs. 116 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32 times less (236 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (50 ns vs. 270 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (29 ms vs. 129 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (474 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 230 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (34 ms vs. 120 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">20 times less (388 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 231 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (59 ms vs. 119 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (2 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (40 ns vs. 240 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (58 ms vs. 119 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (2 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 310 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (62 ms vs. 138 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (2 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (49 ns vs. 621 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (65 ms vs. 119 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (3 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (25 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (60 ns vs. 271 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (30 ms vs. 128 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (929 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (120 LLVM lines vs. 480 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (60 ns vs. 290 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (62 ms vs. 127 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">8</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">fewer allocs (80 B allocs vs. 480 B allocs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (430 ns vs. 310 ns)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (80 ms vs. 126 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (5 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">fewer allocs (464 B allocs vs. 480 B allocs)</td>\n      <td style = \"color: indianred; text-align: left;\">6 times more (3 μs vs. 430 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (157 ms vs. 130 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (6 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">worse (2 kB allocs vs. 480 B allocs)</td>\n      <td style = \"color: indianred; text-align: left;\">13 times more (13 μs vs. 942 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (475 ms vs. 130 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (12 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (40 ns vs. 260 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (35 ms vs. 181 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">25 times less (422 kB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 512 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">11 times less (40 ns vs. 451 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (79 ms vs. 259 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (3 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 576 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">27 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (154 ms vs. 380 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (4 MB vs. 29 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 960 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">66 times less (49 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (180 ms vs. 379 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (5 MB vs. 29 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">311 times less (40 ns vs. 12 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (186 ms vs. 384 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (5 MB vs. 29 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 448 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 280 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (34 ms vs. 184 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">23 times less (516 kB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 512 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (49 ns vs. 510 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (80 ms vs. 295 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (3 MB vs. 22 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 576 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">53 times less (49 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (160 ms vs. 466 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (4 MB vs. 35 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 960 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">153 times less (40 ns vs. 6 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (177 ms vs. 447 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (5 MB vs. 35 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">524 times less (40 ns vs. 21 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (184 ms vs. 447 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (5 MB vs. 35 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (11 LLVM lines vs. 640 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (60 ns vs. 360 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (31 ms vs. 183 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (867 kB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (17 LLVM lines vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">14 times less (49 ns vs. 701 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (56 ms vs. 316 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 20 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (39 LLVM lines vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">52 times less (60 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (94 ms vs. 502 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (6 MB vs. 33 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">32</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">fewer allocs (1 kB allocs vs. 34 kB allocs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">3 times less (3 μs vs. 8 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">2 times less (204 ms vs. 493 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">2 times less (12 MB vs. 33 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_unique(itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple(unique(itr))</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">fewer allocs (5 kB allocs vs. 525 kB allocs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">4 times less (14 μs vs. 61 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (537 ms vs. 498 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (18 MB vs. 33 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (31 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">26 times more (392 kB vs. 15 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (31 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">22 times more (426 kB vs. 19 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">33 times more (653 kB vs. 19 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 999 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (64 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (3 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (40 ns vs. 120 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (68 ms vs. 57 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (49 ns vs. 120 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (73 ms vs. 57 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (34 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 977 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (58 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (4 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (49 ns vs. 120 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (61 ms vs. 50 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (5 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times less (40 ns vs. 140 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (73 ms vs. 49 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (9 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (42 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 999 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (80 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (134 ms vs. 44 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times less (49 ns vs. 251 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (185 ms vs. 60 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (13 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times less (40 ns vs. 240 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (192 ms vs. 58 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (14 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 1004 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (79 ms vs. 33 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (141 ms vs. 46 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times less (40 ns vs. 250 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (187 ms vs. 62 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (13 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times less (49 ns vs. 250 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (192 ms vs. 59 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (14 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (33 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 1003 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (63 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (95 ms vs. 45 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (11 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 8 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">13 times less (40 ns vs. 541 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (110 ms vs. 51 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">8 times more (18 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allunique(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 29 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">30 times less (49 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (130 ms vs. 51 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">13 times more (29 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">15 times more (319 kB vs. 21 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">13 times more (352 kB vs. 25 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (35 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">14 times more (366 kB vs. 25 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (852 kB vs. 193 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (51 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (932 kB vs. 294 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (82 ms vs. 31 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (1 MB vs. 295 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (92 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">7 times more (2 MB vs. 297 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (141 ms vs. 31 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">20 times more (6 MB vs. 308 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (972 kB vs. 186 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (1 MB vs. 423 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (68 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (2 MB vs. 431 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (70 ms vs. 32 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">6 times more (3 MB vs. 491 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 4 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">151 times less (40 ns vs. 6 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (90 ms vs. 35 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">21 times more (9 MB vs. 435 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (849 kB vs. 190 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (52 ms vs. 31 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (1 MB vs. 192 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (84 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">8 times more (2 MB vs. 193 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (90 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">13 times more (3 MB vs. 196 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (131 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">33 times more (7 MB vs. 206 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (51 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (854 kB vs. 195 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (52 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (1 MB vs. 196 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (85 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">8 times more (2 MB vs. 197 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (90 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">13 times more (3 MB vs. 200 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (134 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">32 times more (7 MB vs. 211 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (35 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (998 kB vs. 254 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (36 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (1 MB vs. 285 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (66 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">6 times more (2 MB vs. 290 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (75 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">10 times more (4 MB vs. 329 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">allequal(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (88 ms vs. 27 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">35 times more (10 MB vs. 281 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (361 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 63 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (395 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (427 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (418 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 67 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 66 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 67 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (104 ms vs. 71 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (6 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (454 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 40 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 40 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (75 ms vs. 45 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (95 ms vs. 43 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (418 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 86 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 87 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (103 ms vs. 75 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (422 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 85 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 87 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (102 ms vs. 75 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 40 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (479 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_sum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">sum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">902 times less (40 ns vs. 36 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (98 ms vs. 50 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (361 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (395 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (427 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 76 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (418 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 83 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (77 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (112 ms vs. 80 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (6 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (454 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (75 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (72 ms vs. 48 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (77 ms vs. 50 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (102 ms vs. 52 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (36 ms vs. 75 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (418 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 87 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (81 ms vs. 95 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 100 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 17 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">27 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (109 ms vs. 84 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (36 ms vs. 75 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (422 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 87 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (81 ms vs. 95 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 95 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (110 ms vs. 86 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (479 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 50 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_prod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">prod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">740 times less (49 ns vs. 36 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (107 ms vs. 58 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (40 ns vs. 180 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (35 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (512 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (40 ns vs. 180 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (36 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (546 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 180 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (28 ms vs. 56 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (577 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (40 ns vs. 210 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (36 ms vs. 67 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (582 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (40 ns vs. 260 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (75 ms vs. 68 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (792 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (40 ns vs. 370 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 69 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (977 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">26 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (84 ms vs. 71 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">47 times less (80 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (430 ms vs. 70 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (8 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (40 ns vs. 210 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (29 ms vs. 59 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (618 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 270 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (67 ms vs. 58 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (862 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (40 ns vs. 370 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (69 ms vs. 60 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">21 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (78 ms vs. 62 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">46 times less (80 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (424 ms vs. 62 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (9 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 220 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (37 ms vs. 72 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (582 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 300 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 69 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (802 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (49 ns vs. 460 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (76 ms vs. 70 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (998 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">35 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (86 ms vs. 71 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">63 times less (80 ns vs. 5 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (423 ms vs. 70 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (8 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 220 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (36 ms vs. 72 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (587 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 300 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 74 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (806 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">11 times less (40 ns vs. 460 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (84 ms vs. 75 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1003 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (86 ms vs. 72 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">63 times less (80 ns vs. 5 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (430 ms vs. 77 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (8 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 176 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (40 ns vs. 240 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (38 ms vs. 61 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (643 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 544 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (40 ns vs. 350 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (67 ms vs. 62 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (863 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (49 ns vs. 601 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (68 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 32 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">79 times less (40 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (78 ms vs. 62 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumsum(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumsum(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 523 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">490 times less (80 ns vs. 39 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (423 ms vs. 63 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (9 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (40 ns vs. 180 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (39 ms vs. 69 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (512 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (40 ns vs. 180 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (36 ms vs. 70 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (546 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (40 ns vs. 180 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (29 ms vs. 60 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (577 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 200 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (37 ms vs. 71 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (582 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 260 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 72 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (792 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (49 ns vs. 370 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (78 ms vs. 73 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (977 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">22 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (86 ms vs. 74 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">46 times less (80 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (425 ms vs. 73 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (8 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 200 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (29 ms vs. 62 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (618 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (40 ns vs. 271 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (70 ms vs. 64 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (862 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (49 ns vs. 370 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (69 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">26 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (78 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (69 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">46 times less (80 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (419 ms vs. 64 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (9 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (40 ns vs. 220 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (36 ms vs. 72 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (582 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 300 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (73 ms vs. 78 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (802 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (49 ns vs. 461 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 73 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (998 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">35 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (86 ms vs. 74 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">72 times less (70 ns vs. 5 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (422 ms vs. 74 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (8 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (40 ns vs. 220 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (38 ms vs. 75 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (587 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 300 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 75 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (806 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">11 times less (40 ns vs. 450 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (83 ms vs. 74 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1003 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">37 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (85 ms vs. 74 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (65 LLVM lines w/ Const vs. 4 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">68 times less (80 ns vs. 6 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (426 ms vs. 75 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (8 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 176 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (40 ns vs. 230 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (29 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (643 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 544 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (49 ns vs. 360 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (67 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (863 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">15 times less (40 ns vs. 612 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (69 ms vs. 69 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (1 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 33 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">68 times less (49 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (80 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cumprod(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(cumprod(Iterators.map(length, itr)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (65 LLVM lines w/ Const vs. 525 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">439 times less (89 ns vs. 39 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (423 ms vs. 65 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (9 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (498 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 78 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (529 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (564 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (36 ms vs. 73 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (677 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 73 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (86 ms vs. 76 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (122 ms vs. 75 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (15 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (713 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (74 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (75 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 ms vs. 56 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (116 ms vs. 50 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (15 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 74 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (728 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 ms vs. 77 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (117 ms vs. 80 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 25 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (122 ms vs. 80 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (15 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (38 ms vs. 80 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (733 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (77 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (81 ms vs. 77 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 79 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 25 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">27 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (121 ms vs. 79 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (15 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (796 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 50 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (75 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 56 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">count(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">710 times less (49 ns vs. 35 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (113 ms vs. 54 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (16 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (348 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (382 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (413 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 71 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (407 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 71 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (104 ms vs. 75 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (6 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (443 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (41 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 45 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 45 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (99 ms vs. 50 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (36 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (407 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 79 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (81 ms vs. 93 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 91 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (104 ms vs. 79 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (411 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 78 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (81 ms vs. 92 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 92 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (103 ms vs. 79 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (468 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (73 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (70 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 48 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_maximum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">maximum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">688 times less (49 ns vs. 34 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (99 ms vs. 54 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (348 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (382 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (413 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (407 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 71 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 71 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (105 ms vs. 76 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (6 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (443 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (98 ms vs. 48 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (36 ms vs. 73 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (407 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 79 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 ms vs. 93 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 91 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">27 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (104 ms vs. 83 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (36 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (411 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 79 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 93 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 93 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (105 ms vs. 79 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (468 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (73 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_minimum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">minimum(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">729 times less (49 ns vs. 36 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (98 ms vs. 55 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (35 ms vs. 82 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (363 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (36 ms vs. 77 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (397 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 53 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (429 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (38 ms vs. 82 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (550 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 82 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 ms vs. 87 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 ms vs. 84 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (145 ms vs. 91 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (9 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (586 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (72 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (74 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (84 ms vs. 55 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (136 ms vs. 58 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (9 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (37 ms vs. 82 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (557 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 90 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 107 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 ms vs. 108 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 31 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (146 ms vs. 91 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (9 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (37 ms vs. 82 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (564 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (84 ms vs. 91 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (81 ms vs. 108 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (92 ms vs. 107 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 31 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">27 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (146 ms vs. 97 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (9 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (618 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 56 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (74 ms vs. 58 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (86 ms vs. 58 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_extrema(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">extrema(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 521 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">862 times less (40 ns vs. 34 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (135 ms vs. 64 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (9 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (511 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (618 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (29 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (716 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 63 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (783 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (90 ms vs. 64 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 64 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (103 ms vs. 66 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 50 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (190 ms vs. 66 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (11 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 ms vs. 59 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (891 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 50 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (74 ms vs. 61 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 63 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (90 ms vs. 69 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (179 ms vs. 65 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (12 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 60 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (54 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (845 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 42 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (40 ns vs. 89 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (97 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 86 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (40 ns vs. 130 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (111 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 32 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (40 ns vs. 390 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (126 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 32 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (210 ms vs. 67 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (11 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 60 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (48 ms vs. 68 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (925 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 78 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">43 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (97 ms vs. 67 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 146 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">137 times less (40 ns vs. 5 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (111 ms vs. 69 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 55 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">470 times less (49 ns vs. 23 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (129 ms vs. 68 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 55 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">1960 times less (49 ns vs. 96 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (215 ms vs. 68 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (11 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 90 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (30 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (1 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 400 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (40 ns vs. 491 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (83 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">27 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (78 ms vs. 67 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 32 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">105 times less (49 ns vs. 5 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (91 ms vs. 67 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_findmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">findmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 521 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">1384 times less (40 ns vs. 55 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (180 ms vs. 67 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (13 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (511 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 58 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (618 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 56 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (718 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (44 ms vs. 58 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (783 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 ms vs. 61 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 63 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (104 ms vs. 65 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (195 ms vs. 62 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (11 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (891 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (74 ms vs. 59 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (75 ms vs. 60 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 ms vs. 61 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (191 ms vs. 61 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (12 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 69 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (47 ms vs. 62 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (847 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 42 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (40 ns vs. 89 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (96 ms vs. 62 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 86 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (40 ns vs. 130 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (111 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 32 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">9 times less (40 ns vs. 380 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (125 ms vs. 62 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 32 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">30 times less (49 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (216 ms vs. 62 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (11 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 26 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 69 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (48 ms vs. 62 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (925 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 78 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">44 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (99 ms vs. 64 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 146 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">112 times less (49 ns vs. 5 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (110 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 55 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">472 times less (49 ns vs. 23 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (126 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 55 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">2406 times less (40 ns vs. 96 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (217 ms vs. 64 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (11 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (40 ns vs. 89 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (30 ms vs. 61 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (1 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 400 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (40 ns vs. 510 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 64 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">29 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (78 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines w/ Const vs. 32 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">105 times less (49 ns vs. 5 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (92 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_findmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">findmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (7 LLVM lines w/ Const vs. 521 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">1109 times less (49 ns vs. 54 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (187 ms vs. 62 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (13 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (415 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (451 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (765 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (674 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 68 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (81 ms vs. 69 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (90 ms vs. 68 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (131 ms vs. 73 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (9 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 40 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (72 ms vs. 39 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (74 ms vs. 40 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (103 ms vs. 41 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">6 times more (16 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 69 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (681 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 78 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 97 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (100 ms vs. 126 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 44 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (164 ms vs. 78 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (12 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (763 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 80 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 103 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (100 ms vs. 126 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 43 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">27 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (160 ms vs. 77 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (12 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 ms vs. 39 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (74 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 50 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (87 ms vs. 55 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">argmax(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (8 LLVM lines vs. 521 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">590 times less (60 ns vs. 35 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (110 ms vs. 46 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (19 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (415 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (449 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (765 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 65 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (675 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (78 ms vs. 65 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (81 ms vs. 65 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (88 ms vs. 65 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (128 ms vs. 69 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (9 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 ms vs. 37 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 37 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (73 ms vs. 37 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 40 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (112 ms vs. 40 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">6 times more (17 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (682 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 75 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 96 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (99 ms vs. 96 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 44 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (166 ms vs. 73 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (12 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 65 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (762 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (83 ms vs. 76 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 97 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (100 ms vs. 96 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 43 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">33 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (166 ms vs. 74 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (12 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 ms vs. 36 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (72 ms vs. 38 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (76 ms vs. 41 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">argmin(length, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (8 LLVM lines vs. 521 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">736 times less (49 ns vs. 36 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (111 ms vs. 44 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (19 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (34 ms vs. 130 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">20 times less (1 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (34 ms vs. 133 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">20 times less (1 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (27 ms vs. 100 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">19 times less (1 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (38 ms vs. 140 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (1 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (80 ms vs. 139 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (84 ms vs. 143 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (99 ms vs. 140 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (183 ms vs. 140 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (26 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (31 ms vs. 113 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (2 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 111 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 113 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (5 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (92 ms vs. 109 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (175 ms vs. 111 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (27 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 15 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (38 ms vs. 141 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (1 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 38 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (40 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (80 ms vs. 149 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 82 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (40 ns vs. 120 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (84 ms vs. 144 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 29 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (49 ns vs. 380 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (100 ms vs. 144 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 29 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (184 ms vs. 142 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (26 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 15 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 60 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (39 ms vs. 146 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (1 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 38 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (82 ms vs. 143 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 82 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (49 ns vs. 130 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (90 ms vs. 146 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 29 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (40 ns vs. 380 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (102 ms vs. 143 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 29 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (186 ms vs. 144 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (26 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (30 ms vs. 113 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (2 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 400 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 150 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 114 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 261 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 120 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 32 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">52 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (91 ms vs. 114 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmax(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmax(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">869 times less (40 ns vs. 35 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (177 ms vs. 115 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (27 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (34 ms vs. 123 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">19 times less (1 MB vs. 22 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (35 ms vs. 120 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">19 times less (1 MB vs. 22 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (27 ms vs. 93 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">19 times less (1 MB vs. 22 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (38 ms vs. 131 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (1 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (83 ms vs. 133 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (83 ms vs. 132 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (104 ms vs. 133 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (182 ms vs. 132 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (26 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (30 ms vs. 106 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (2 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (75 ms vs. 101 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (76 ms vs. 101 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (5 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (93 ms vs. 105 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (176 ms vs. 102 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (27 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 7 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (39 ms vs. 133 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (1 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 38 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (80 ms vs. 136 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 82 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (40 ns vs. 120 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (87 ms vs. 145 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 29 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (49 ns vs. 380 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (103 ms vs. 137 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 29 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (186 ms vs. 133 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (26 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 7 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (39 ms vs. 133 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (1 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 38 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (40 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (82 ms vs. 134 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 82 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (40 ns vs. 120 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (86 ms vs. 135 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 29 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (40 ns vs. 390 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (102 ms vs. 136 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 29 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (183 ms vs. 135 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (26 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (31 ms vs. 104 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">15 times less (2 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 400 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (49 ns vs. 140 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 108 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 260 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 109 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (4 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 32 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">51 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (95 ms vs. 108 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_argmin(unrolled_map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">argmin(Iterators.map(length, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 521 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">889 times less (40 ns vs. 36 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (177 ms vs. 105 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (27 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (32 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (197 kB vs. 180 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (33 ms vs. 32 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (237 kB vs. 244 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (211 kB vs. 233 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (34 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (240 kB vs. 403 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (305 kB vs. 702 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (52 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (326 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (453 kB vs. 267 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (65 ms vs. 29 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (960 kB vs. 267 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (31 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (214 kB vs. 417 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (303 kB vs. 930 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (389 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (452 kB vs. 272 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (60 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (959 kB vs. 272 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (36 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (285 kB vs. 451 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 37 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (351 kB vs. 780 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (372 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 31 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (54 ms vs. 34 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (500 kB vs. 605 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 31 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (64 ms vs. 35 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1006 kB vs. 605 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (35 ms vs. 39 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (240 kB vs. 403 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (52 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (306 kB vs. 703 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (327 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (454 kB vs. 268 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (65 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (961 kB vs. 268 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (31 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (239 kB vs. 498 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (304 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 37 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (326 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (453 kB vs. 273 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findfirst(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findfirst(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (63 ms vs. 29 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (960 kB vs. 276 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ms vs. 38 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (356 kB vs. 343 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (35 ms vs. 40 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (300 kB vs. 397 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (28 ms vs. 35 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (338 kB vs. 469 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (35 ms vs. 41 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (305 kB vs. 559 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (54 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (374 kB vs. 930 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (53 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (405 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (56 ms vs. 39 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (590 kB vs. 689 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (66 ms vs. 38 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 689 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 38 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (350 kB vs. 667 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (457 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (513 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 41 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (847 kB vs. 694 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (61 ms vs. 40 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (2 MB vs. 695 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (41 ms vs. 36 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (394 kB vs. 465 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (59 ms vs. 40 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (473 kB vs. 924 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 38 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (474 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 30 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 89 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (61 ms vs. 42 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (621 kB vs. 708 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 30 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 69 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (73 ms vs. 41 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 708 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (35 ms vs. 38 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (309 kB vs. 520 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (52 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (387 kB vs. 895 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (54 ms vs. 40 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (430 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 30 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (40 ns vs. 380 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (57 ms vs. 41 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (615 kB vs. 708 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 30 LLVM lines)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">34 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (66 ms vs. 40 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (1 MB vs. 708 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 37 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (379 kB vs. 719 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 40 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (470 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (538 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 33 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">53 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ms vs. 42 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (872 kB vs. 750 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">findlast(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 525 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">851 times less (40 ns vs. 34 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (61 ms vs. 43 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (271 kB vs. 200 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (304 kB vs. 265 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (45 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (313 kB vs. 254 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (48 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (325 kB vs. 424 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (67 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (431 kB vs. 723 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (70 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (536 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (86 ms vs. 50 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (1 MB vs. 395 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (162 ms vs. 49 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">9 times more (4 MB vs. 395 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (354 kB vs. 437 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (66 ms vs. 48 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (514 kB vs. 951 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (755 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (95 ms vs. 50 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (2 MB vs. 399 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (181 ms vs. 50 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">14 times more (6 MB vs. 400 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (54 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (369 kB vs. 465 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 67 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (570 kB vs. 1014 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (95 ms vs. 46 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (813 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. type-unstable)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (49 ns vs. 100 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (116 ms vs. 67 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (1 MB vs. 580 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. type-unstable)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (40 ns vs. 80 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (206 ms vs. 54 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">8 times more (4 MB vs. 498 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (374 kB vs. 465 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 ms vs. 68 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (574 kB vs. 1019 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (97 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (817 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. type-unstable)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (40 ns vs. 100 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (116 ms vs. 63 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (1 MB vs. 584 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. type-unstable)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (196 ms vs. 56 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">7 times more (4 MB vs. 502 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 ms vs. 50 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (436 kB vs. 555 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (79 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (691 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: silver; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">8</td>\n      <td style = \"color: silver; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: silver; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: silver; text-align: left;\">2 times more (104 ms vs. 51 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (8 LLVM lines vs. 5 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times less (60 ns vs. 280 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (126 ms vs. 65 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (2 MB vs. 558 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_argfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">itr[findfirst((x-&gt;length(x) &gt;= length(itr[end])), itr)]</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (8 LLVM lines vs. 12 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">13 times less (49 ns vs. 661 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (248 ms vs. 55 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">12 times more (6 MB vs. 492 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (408 kB vs. 404 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (56 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (441 kB vs. 463 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (45 ms vs. 58 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (527 kB vs. 530 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (465 kB vs. 625 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (72 ms vs. 67 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (581 kB vs. 950 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (73 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (702 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 ms vs. 60 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 758 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (161 ms vs. 59 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (4 MB vs. 758 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (583 kB vs. 728 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (67 ms vs. 69 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (778 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (70 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1005 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (90 ms vs. 56 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (2 MB vs. 762 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (188 ms vs. 57 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">10 times more (8 MB vs. 763 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (56 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (508 kB vs. 531 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (714 kB vs. 852 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (98 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (965 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (117 ms vs. 56 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 822 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (200 ms vs. 57 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (5 MB vs. 822 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (57 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (513 kB vs. 586 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (82 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (718 kB vs. 907 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (97 ms vs. 55 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (969 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (117 ms vs. 56 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 822 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (200 ms vs. 56 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (5 MB vs. 822 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (663 kB vs. 781 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: gray; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (947 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (100 ms vs. 58 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 50 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (128 ms vs. 58 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (3 MB vs. 806 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_arglast((x-&gt;length(x) &gt;= length(itr[1])), itr)</td>\n      <td style = \"color: indianred; text-align: left;\">itr[findlast((x-&gt;length(x) &gt;= length(itr[1])), itr)]</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (251 ms vs. 57 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">10 times more (8 MB vs. 812 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (166 kB vs. 602 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (243 kB vs. 639 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (444 kB vs. 826 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (296 kB vs. 702 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (52 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 828 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 29 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 933 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 128 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">12 times less (49 ns vs. 611 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (58 ms vs. 113 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 128 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">47 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 111 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (10 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 34 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (630 kB vs. 956 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (57 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (36 LLVM lines vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">23 times less (60 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (70 ms vs. 134 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (10 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1394 LLVM lines vs. 5 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">60 times more (290 μs vs. 5 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (172 ms vs. 147 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (29 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (296 kB vs. 779 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (53 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 998 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 880 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">23 times less (40 ns vs. 931 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (57 ms vs. 140 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (4 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">62 times less (49 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (73 ms vs. 145 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (9 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (343 kB vs. 786 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (53 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 1006 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 640 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">93 times less (40 ns vs. 4 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (57 ms vs. 169 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (4 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">312 times less (49 ns vs. 15 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (75 ms vs. 169 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (10 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 50 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 33 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (702 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (17 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ms vs. 38 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (105 LLVM lines vs. 35 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">68 times less (89 ns vs. 6 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (76 ms vs. 186 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (10 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_filter(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">filter(!isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1381 LLVM lines vs. 533 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (347 μs vs. 60 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (184 ms vs. 188 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (29 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (176 kB vs. 778 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (209 kB vs. 813 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (422 kB vs. 1003 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (348 kB vs. 879 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (76 ms vs. 29 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 1013 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (106 ms vs. 29 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">14 times less (49 ns vs. 731 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (288 ms vs. 119 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (6 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">51 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">8 times more (1 s vs. 122 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (20 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (29 ms vs. 36 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (719 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (55 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (58 ms vs. 35 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (36 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">26 times less (60 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (83 ms vs. 145 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1394 LLVM lines vs. 7 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">57 times more (295 μs vs. 5 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (204 ms vs. 156 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (42 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (330 kB vs. 967 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (75 ms vs. 29 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (107 ms vs. 31 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">39 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (290 ms vs. 155 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 5 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">105 times less (49 ns vs. 5 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (1 s vs. 156 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (20 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (352 kB vs. 972 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (78 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (106 ms vs. 31 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">144 times less (49 ns vs. 7 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (293 ms vs. 179 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 4 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">600 times less (49 ns vs. 29 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (1 s vs. 182 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (20 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 ms vs. 35 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (749 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (17 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (56 ms vs. 35 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ms vs. 38 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (105 LLVM lines vs. 69 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">151 times less (80 ns vs. 12 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (84 ms vs. 199 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_split(isempty, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">(filter(isempty, itr), filter(!isempty, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1381 LLVM lines vs. 1 MB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (344 μs vs. 120 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (248 ms vs. 199 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (43 MB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (46 ms vs. 30 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 150 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (51 ms vs. 47 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 190 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (41 ms vs. 38 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 160 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (61 ms vs. 49 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">4</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times less (40 ns vs. 190 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (112 ms vs. 49 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (6 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times less (40 ns vs. 241 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (165 ms vs. 49 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">11 times less (49 ns vs. 571 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">8 times more (494 ms vs. 57 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (18 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">46 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">39 times more (2 s vs. 49 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">22 times more (73 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 210 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (48 ms vs. 42 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">4</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (8 LLVM lines vs. 144 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times less (49 ns vs. 261 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (79 ms vs. 42 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (12 LLVM lines vs. 208 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">7 times less (50 ns vs. 370 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (88 ms vs. 43 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (11 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (36 LLVM lines vs. 592 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">21 times less (50 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (205 ms vs. 48 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">14 times more (48 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (132 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">47 times less (80 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">21 times more (1 s vs. 53 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">143 times more (479 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 96 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">11 times less (40 ns vs. 440 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (55 ms vs. 78 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 128 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (40 ns vs. 340 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (114 ms vs. 81 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 496 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">19 times less (40 ns vs. 791 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (167 ms vs. 84 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (8 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">68 times less (40 ns vs. 3 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (501 ms vs. 80 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (20 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 8 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">279 times less (40 ns vs. 11 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">26 times more (2 s vs. 81 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">18 times more (104 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 192 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 310 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (55 ms vs. 84 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 496 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (49 ns vs. 451 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (113 ms vs. 83 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 496 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">24 times less (40 ns vs. 991 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (167 ms vs. 82 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (8 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">72 times less (49 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (516 ms vs. 84 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (22 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 8 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">376 times less (40 ns vs. 15 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">27 times more (2 s vs. 83 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">18 times more (121 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (12 LLVM lines vs. 352 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (60 ns vs. 411 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (47 ms vs. 61 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (16 LLVM lines vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (60 ns vs. 602 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (82 ms vs. 56 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (8 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (36 LLVM lines vs. 3 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">22 times less (60 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (97 ms vs. 62 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (15 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (128 LLVM lines vs. 35 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">69 times less (80 ns vs. 6 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (348 ms vs. 56 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">27 times more (118 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatten(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatten(itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (516 LLVM lines vs. 533 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">125 times less (310 ns vs. 39 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">62 times more (4 s vs. 59 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">340 times more (2 GB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (58 ms vs. 52 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (3 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 160 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (62 ms vs. 83 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (50 ns vs. 200 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (42 ms vs. 53 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 96 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 190 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (66 ms vs. 99 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 96 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 220 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (134 ms vs. 103 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 96 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 280 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (181 ms vs. 99 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (8 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 128 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">16 times less (40 ns vs. 661 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (512 ms vs. 100 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (19 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 160 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">51 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">19 times more (2 s vs. 101 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">14 times more (74 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 192 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 230 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (50 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 290 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (87 ms vs. 70 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (8 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (12 LLVM lines vs. 240 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times less (60 ns vs. 410 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (99 ms vs. 64 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (12 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (36 LLVM lines vs. 800 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">16 times less (69 ns vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (236 ms vs. 67 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">12 times more (54 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (132 LLVM lines vs. 3 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">49 times less (80 ns vs. 4 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">20 times more (1 s vs. 65 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">127 times more (550 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (40 ns vs. 340 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (69 ms vs. 117 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (4 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">75 times less (49 ns vs. 4 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (153 ms vs. 329 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (7 MB vs. 30 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">165 times less (49 ns vs. 8 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (206 ms vs. 397 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (9 MB vs. 32 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 11 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">481 times less (49 ns vs. 24 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (548 ms vs. 410 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (21 MB vs. 32 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 43 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">1843 times less (49 ns vs. 90 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (2 s vs. 401 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (106 MB vs. 32 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 240 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (49 ns vs. 431 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (75 ms vs. 249 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (4 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">39 times less (49 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (140 ms vs. 308 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (7 MB vs. 20 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">162 times less (40 ns vs. 7 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (208 ms vs. 397 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (9 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 13 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">698 times less (40 ns vs. 28 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (559 ms vs. 374 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (23 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 55 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2857 times less (40 ns vs. 114 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (2 s vs. 378 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (123 MB vs. 22 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (13 LLVM lines vs. 352 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (49 ns vs. 440 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (50 ms vs. 83 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (32 LLVM lines vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">29 times less (60 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (90 ms vs. 143 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (9 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (69 LLVM lines vs. 14 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">99 times less (60 ns vs. 6 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (121 ms vs. 226 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (18 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (276 LLVM lines vs. 175 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">305 times less (100 ns vs. 31 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (396 ms vs. 221 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">14 times more (137 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_flatmap(Iterators.reverse, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.flatmap(Iterators.reverse, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1111 LLVM lines vs. 3 MB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">1250 times less (391 ns vs. 489 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">19 times more (4 s vs. 221 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">161 times more (2 GB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 150 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (96 ms vs. 107 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (13 MB vs. 15 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 150 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (96 ms vs. 106 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 15 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">1</td>\n      <td style = \"color: royalblue; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">better (49 LLVM lines vs. 160 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (490 ns vs. 180 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (76 ms vs. 99 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (14 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (40 ns vs. 200 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (115 ms vs. 113 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (40 ns vs. 380 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (108 ms vs. 113 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">26 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (109 ms vs. 112 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 8 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">382 times less (40 ns vs. 15 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (127 ms vs. 113 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (16 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">2</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (122 LLVM lines vs. 352 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (2 μs vs. 310 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (97 ms vs. 113 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (15 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">4</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (422 LLVM lines vs. 1 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">9 times more (8 μs vs. 771 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (119 ms vs. 109 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (17 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1622 LLVM lines vs. 4 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">12 times more (32 μs vs. 3 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (438 ms vs. 107 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (26 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (25622 LLVM lines vs. 72 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">23 times more (866 μs vs. 37 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">1518 times more (178 s vs. 117 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">11 times more (189 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (49 ns vs. 310 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (111 ms vs. 141 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">20 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (116 ms vs. 142 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (16 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">78 times less (49 ns vs. 4 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (116 ms vs. 139 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (18 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 16 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1116 times less (49 ns vs. 55 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (139 ms vs. 144 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (20 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 300 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (132 ms vs. 148 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (15 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">71 times less (40 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (115 ms vs. 204 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (16 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">312 times less (40 ns vs. 12 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (120 ms vs. 342 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (19 MB vs. 27 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 24 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3810 times less (49 ns vs. 187 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (138 ms vs. 333 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (21 MB vs. 27 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">2</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (124 LLVM lines vs. 592 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (2 μs vs. 520 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (95 ms vs. 150 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (16 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (428 LLVM lines vs. 4 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 μs vs. 4 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (131 ms vs. 232 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (19 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (1646 LLVM lines vs. 31 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (35 μs vs. 32 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (298 ms vs. 437 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (30 MB vs. 28 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (27890 LLVM lines vs. 1 MB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (999 μs vs. 488 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">20 times more (9 s vs. 438 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (195 MB vs. 30 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (49 ns vs. 150 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (110 ms vs. 140 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (15 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (40 ns vs. 150 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (109 ms vs. 125 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (16 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">1</td>\n      <td style = \"color: royalblue; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">better (64 LLVM lines vs. 160 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (691 ns vs. 180 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (85 ms vs. 118 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (17 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 240 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (121 ms vs. 132 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (16 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 80 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">27 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (122 ms vs. 131 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (16 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 4 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">190 times less (40 ns vs. 8 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (133 ms vs. 131 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (17 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">2</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (327 LLVM lines vs. 736 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">11 times more (5 μs vs. 450 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (121 ms vs. 138 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (19 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">4</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (2455 LLVM lines vs. 5 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">18 times more (47 μs vs. 3 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">6 times more (893 ms vs. 130 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (34 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (19479 LLVM lines vs. 44 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">21 times more (414 μs vs. 19 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">736 times more (96 s vs. 130 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">8 times more (159 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">15 times less (40 ns vs. 601 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (122 ms vs. 155 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (16 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">92 times less (49 ns vs. 5 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (125 ms vs. 155 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (18 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 8 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1011 times less (40 ns vs. 40 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (139 ms vs. 156 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (21 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 144 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">11 times less (49 ns vs. 581 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (123 ms vs. 156 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (17 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">334 times less (40 ns vs. 13 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (128 ms vs. 404 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (18 MB vs. 32 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 8 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4839 times less (40 ns vs. 194 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (153 ms vs. 2 s)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (21 MB vs. 71 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">2</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (333 LLVM lines vs. 1 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (6 μs vs. 1 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (122 ms vs. 186 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (20 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (2473 LLVM lines vs. 22 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (46 μs vs. 42 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (375 ms vs. 551 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (36 MB vs. 33 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_product(itr, itr, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.product(itr, itr, itr))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (20919 LLVM lines vs. 293 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (479 μs vs. 448 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (6 s vs. 2 s)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (164 MB vs. 73 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (40 ns vs. 180 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (64 ms vs. 55 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (40 ns vs. 170 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (64 ms vs. 55 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (12 LLVM lines vs. 160 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (60 ns vs. 260 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (43 ms vs. 55 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (49 ns vs. 210 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (75 ms vs. 54 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (40 ns vs. 290 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 54 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">11 times less (40 ns vs. 450 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (75 ms vs. 59 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">37 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (78 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">137 times less (40 ns vs. 5 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (101 ms vs. 62 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (11 LLVM lines vs. 272 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (49 ns vs. 370 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (57 ms vs. 58 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (36 LLVM lines vs. 464 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (60 ns vs. 611 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (58 ms vs. 59 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (37 LLVM lines vs. 848 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">18 times less (60 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (60 ms vs. 66 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (229 LLVM lines vs. 3 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">56 times less (89 ns vs. 5 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (91 ms vs. 85 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (14 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (260 LLVM lines vs. 12 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">200 times less (230 ns vs. 46 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (355 ms vs. 76 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">7 times more (42 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (49 ns vs. 260 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (76 ms vs. 59 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 160 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (40 ns vs. 400 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 59 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">16 times less (40 ns vs. 661 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 61 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 848 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">57 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">215 times less (40 ns vs. 9 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (86 ms vs. 67 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 112 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (40 ns vs. 250 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (80 ms vs. 59 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 160 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">13 times less (49 ns vs. 651 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (75 ms vs. 77 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 256 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">70 times less (40 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (75 ms vs. 87 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 848 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">265 times less (40 ns vs. 11 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (78 ms vs. 87 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 3 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1116 times less (40 ns vs. 45 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (86 ms vs. 90 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (19 LLVM lines vs. 528 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8 times less (50 ns vs. 400 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (55 ms vs. 69 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (33 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">18 times less (60 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (59 ms vs. 86 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (62 LLVM lines vs. 8 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">62 times less (69 ns vs. 4 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (65 ms vs. 109 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (7 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (233 LLVM lines vs. 103 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">118 times less (230 ns vs. 27 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (111 ms vs. 106 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (14 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_cycle(itr, Val(3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.cycle(itr, 3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1611 LLVM lines vs. 2 MB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">342 times less (911 ns vs. 312 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">7 times more (808 ms vs. 106 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (42 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">21 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (75 ms vs. 114 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (11 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">31 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (76 ms vs. 114 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (11 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 400 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">23 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (70 ms vs. 124 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (12 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 320 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">22 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 118 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (11 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 528 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (97 ms vs. 199 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (12 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">39 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (104 ms vs. 196 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (12 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">63 times less (40 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (178 ms vs. 206 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (16 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 3 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">167 times less (40 ns vs. 7 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (486 ms vs. 201 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (34 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 496 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">25 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (72 ms vs. 126 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (12 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. 912 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">25 times less (60 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (87 ms vs. 215 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (13 MB vs. 20 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (12 LLVM lines vs. 1 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">37 times less (49 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (87 ms vs. 216 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 20 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (36 LLVM lines vs. 4 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">59 times less (60 ns vs. 4 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (112 ms vs. 230 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (23 MB vs. 20 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (132 LLVM lines vs. 14 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">119 times less (89 ns vs. 11 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (358 ms vs. 273 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (99 MB vs. 20 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 368 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">31 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 130 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (11 MB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 560 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">30 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (93 ms vs. 207 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (12 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 752 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">45 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (102 ms vs. 274 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (12 MB vs. 28 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">517 times less (40 ns vs. 21 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (175 ms vs. 457 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (16 MB vs. 43 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 5 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2437 times less (49 ns vs. 119 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (495 ms vs. 455 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (34 MB vs. 43 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 368 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">31 times less (40 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (77 ms vs. 131 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (11 MB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 608 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">41 times less (40 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (94 ms vs. 229 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (12 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 832 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">66 times less (40 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (109 ms vs. 302 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (12 MB vs. 28 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">519 times less (49 ns vs. 25 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (175 ms vs. 465 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (16 MB vs. 42 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 7 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3495 times less (40 ns vs. 140 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (496 ms vs. 454 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (34 MB vs. 42 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (11 LLVM lines vs. 624 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">28 times less (49 ns vs. 1 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (75 ms vs. 141 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (12 MB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (17 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">33 times less (60 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (82 ms vs. 249 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (13 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (30 LLVM lines vs. 5 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">53 times less (60 ns vs. 3 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (88 ms vs. 326 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (14 MB vs. 28 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (105 LLVM lines vs. 44 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">192 times less (89 ns vs. 17 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (121 ms vs. 513 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (23 MB vs. 42 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_partition(itr, Val(3))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple(Iterators.map(Tuple, Iterators.partition(itr, 3)))</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (625 LLVM lines vs. 569 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">317 times less (360 ns vs. 114 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (455 ms vs. 851 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (99 MB vs. 43 MB)</td>\n    </tr>\n  </tbody>\n</table>\n</div>","category":"page"},{"location":"comparison_tables/#Nested-Unrolled-Functions","page":"Comparison Tables","title":"Nested Unrolled Functions","text":"","category":"section"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"<div style=\"width: max(80vw, 100%)\">\n<table style = \"font-family: monospace; font-size: 70%;\">\n  <thead>\n    <tr class = \"header headerLastRow\">\n      <th style = \"text-align: left;\">Unrolled Expression</th>\n      <th style = \"text-align: left;\">Reference Expression</th>\n      <th style = \"text-align: left;\">Itr Type</th>\n      <th style = \"text-align: left;\">Itr Length</th>\n      <th style = \"text-align: left;\">Itr Contents</th>\n      <th style = \"text-align: left;\">Optimization</th>\n      <th style = \"text-align: left;\">Run Time</th>\n      <th style = \"text-align: left;\">Compilation Time</th>\n      <th style = \"text-align: left;\">Total Allocations</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (37 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (941 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (13 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (37 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (982 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (57 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (59 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (75 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 69 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (92 ms vs. 57 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (6 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (22 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (41 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (102 ms vs. 62 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (86 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (117 ms vs. 82 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (325 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (140 ms vs. 86 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (11 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_any((x-&gt;unrolled_sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">any((x-&gt;sum(x) &gt; 7), itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1300 LLVM lines vs. 12 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">14 times less (49 ns vs. 692 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (290 ms vs. 72 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (17 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (1 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (10 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (2 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (16 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (86 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (4 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (81 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (4 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (88 ms vs. 73 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (6 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (61 ns vs. 69 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (120 ms vs. 60 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (13 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (13 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (2 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (26 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 ms vs. 63 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (6 MB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (59 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (99 ms vs. 79 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (10 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: gray; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (330 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 ns vs. 89 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (127 ms vs. 119 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (13 MB vs. 22 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_mapreduce(unrolled_sum, max, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">mapreduce(sum, max, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1477 LLVM lines vs. 521 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">293 times less (190 ns vs. 56 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (344 ms vs. 108 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (27 MB vs. 20 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (61 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (27 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (63 ms vs. 50 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (37 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (79 ms vs. 49 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: gray; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (57 LLVM lines w/ switch)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (84 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (177 LLVM lines w/ switch)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (80 ns vs. 80 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (93 ms vs. 54 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (657 LLVM lines w/ switch)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (136 ms vs. 50 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (17 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (34 LLVM lines w/ switch vs. 64 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (64 ms vs. 49 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">4</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (61 LLVM lines w/ switch vs. 1 MB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (49 ns vs. 100 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (112 ms vs. 50 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (7 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (130 LLVM lines w/ switch vs. 256 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (49 ns vs. 100 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (127 ms vs. 49 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (11 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (481 LLVM lines w/ switch vs. 1 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (61 ns vs. 120 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (154 ms vs. 51 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (14 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(unrolled_minimum, rand(1:length(itr3)), itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">minimum(itr3[rand(1:length(itr3))])</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1924 LLVM lines w/ switch vs. 4 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times less (120 ns vs. 350 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (236 ms vs. 53 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">8 times more (29 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (73 ms vs. 157 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (1 MB vs. 15 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (73 ms vs. 162 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (1 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (92 ms vs. 160 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (1 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (91 ms vs. 163 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (1 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (96 ms vs. 169 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (2 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (100 ms vs. 169 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (2 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 8 LLVM lines w/ Const)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 61 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (83 ms vs. 242 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">22 times less (2 MB vs. 39 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. type-unstable)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (40 ns vs. 230 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (123 ms vs. 353 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">26 times less (3 MB vs. 70 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. type-unstable)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (49 ns vs. 510 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (159 ms vs. 422 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">19 times less (4 MB vs. 85 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. type-unstable)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">147 times less (49 ns vs. 7 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (164 ms vs. 430 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">18 times less (5 MB vs. 86 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x1, x2)-&gt;@assert(x1 == x2[1:length(x1)])), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. type-unstable)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">785 times less (40 ns vs. 31 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (170 ms vs. 424 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">15 times less (5 MB vs. 85 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (120 ns vs. 130 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (71 ms vs. 119 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (2 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (72 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (190 ns vs. 200 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (71 ms vs. 127 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (2 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (124 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (330 ns vs. 341 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (93 ms vs. 128 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (2 MB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (228 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (621 ns vs. 621 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (109 ms vs. 132 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (3 MB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (852 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (2 μs vs. 2 μs)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (124 ms vs. 128 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (5 MB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: gray; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">128</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (3348 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (9 μs vs. 9 μs)</td>\n      <td style = \"color: gray; text-align: left;\">similar (244 ms vs. 126 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (12 MB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (83 LLVM lines w/ Const vs. 96 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (270 ns vs. 651 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (82 ms vs. 157 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (3 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (190 LLVM lines w/ Const vs. 512 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (771 ns vs. 2 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (132 ms vs. 183 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (6 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">8</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (369 LLVM lines w/ Const vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (2 μs vs. 8 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (170 ms vs. 238 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (13 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">32</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (1482 LLVM lines w/ Const vs. 33 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (9 μs vs. 36 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (241 ms vs. 240 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (15 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_foreach(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">foreach(((x2, x3)-&gt;@assert(x2 == map(Val, x3))), itr2, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (5897 LLVM lines w/ Const vs. 527 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times less (37 μs vs. 199 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (508 ms vs. 239 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (25 MB vs. 24 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: gray; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (17 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (97 ms vs. 64 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: gray; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (98 ms vs. 63 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: gray; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (18 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (115 ms vs. 63 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (18 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (117 ms vs. 65 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (18 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (125 ms vs. 64 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (6 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (18 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (150 ms vs. 64 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">7 times more (15 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (18 LLVM lines w/ Const vs. type-unstable)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 90 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (108 ms vs. 71 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">4</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (18 LLVM lines w/ Const vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times less (49 ns vs. 230 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (144 ms vs. 69 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (5 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (18 LLVM lines w/ Const vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times less (49 ns vs. 220 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (188 ms vs. 75 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (7 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (18 LLVM lines w/ Const vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times less (49 ns vs. 230 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (206 ms vs. 83 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (9 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x1, x2)-&gt;@assert(x1 == unrolled_take(x2, Val(length(x1))))), rand(1:length(itr1)), itr1, itr2)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr1)) @assert itr1[n] == (itr2[n])[1:length(itr1[n])] end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct singleton Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (18 LLVM lines w/ Const vs. 64 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times less (49 ns vs. 220 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (224 ms vs. 90 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">7 times more (18 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">1</td>\n      <td style = \"color: indianred; text-align: left;\">nonempty Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">similar (59 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (130 ns vs. 130 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (93 ms vs. 70 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (4 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (89 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (130 ns vs. 130 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (93 ms vs. 70 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (5 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (147 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (130 ns vs. 130 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (117 ms vs. 70 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (5 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (263 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (130 ns vs. 130 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (121 ms vs. 70 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (6 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">32</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (959 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (140 ns vs. 131 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (165 ms vs. 71 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (11 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: indianred; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">128</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (3743 LLVM lines w/ Const)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (150 ns vs. 140 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (378 ms vs. 84 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">16 times more (33 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">2</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (100 LLVM lines w/ Const vs. 48 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (130 ns vs. 180 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (112 ms vs. 70 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (6 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">4</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (213 LLVM lines w/ Const vs. 128 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times less (130 ns vs. 501 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (157 ms vs. 75 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">4 times more (9 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">8</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (405 LLVM lines w/ Const vs. 272 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times less (140 ns vs. 541 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (197 ms vs. 85 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">5 times more (16 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (1593 LLVM lines w/ Const vs. 1 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times less (150 ns vs. 541 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times more (281 ms vs. 87 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">8 times more (24 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_applyat(((x2, x3)-&gt;@assert(x2 == unrolled_map(Val, x3))), rand(1:length(itr2)), itr2, itr3)</td>\n      <td style = \"color: royalblue; text-align: left;\">let n = rand(1:length(itr2)) @assert itr2[n] == map(Val, itr3[n]) end</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">128</td>\n      <td style = \"color: royalblue; text-align: left;\">distinct nonempty Tuples</td>\n      <td style = \"color: royalblue; text-align: left;\">better (6310 LLVM lines w/ Const vs. 4 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">3 times less (210 ns vs. 772 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">7 times more (595 ms vs. 81 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">22 times more (57 MB vs. 2 MB)</td>\n    </tr>\n  </tbody>\n</table>\n</div>","category":"page"},{"location":"comparison_tables/#Recursive-Unrolled-Functions","page":"Comparison Tables","title":"Recursive Unrolled Functions","text":"","category":"section"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"<div style=\"width: max(80vw, 100%)\">\n<table style = \"font-family: monospace; font-size: 70%;\">\n  <thead>\n    <tr class = \"header headerLastRow\">\n      <th style = \"text-align: left;\">Unrolled Expression</th>\n      <th style = \"text-align: left;\">Reference Expression</th>\n      <th style = \"text-align: left;\">Itr Type</th>\n      <th style = \"text-align: left;\">Itr Length</th>\n      <th style = \"text-align: left;\">Itr Contents</th>\n      <th style = \"text-align: left;\">Optimization</th>\n      <th style = \"text-align: left;\">Run Time</th>\n      <th style = \"text-align: left;\">Compilation Time</th>\n      <th style = \"text-align: left;\">Total Allocations</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuples with 1 value</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (536 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuples with 2 values</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (543 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuples with 4 values</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (568 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 4 values at depth 3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuples with 16 values</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (573 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 16 values at depth 3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 16 values at depth 5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuples with 64 values</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (574 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 64 values at depth 3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 64 values at depth 5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else length(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 64 values at depth 7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (3 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">Tuples with 1 value</td>\n      <td style = \"color: gray; text-align: left;\">similar (10 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">Tuples with 2 values</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 48 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuples with 4 values</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (93 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (4 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 4 values at depth 3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (54 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (4 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuples with 16 values</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (8 LLVM lines vs. type-unstable)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (49 ns vs. 70 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (99 ms vs. 69 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">nested Tuples with 16 values at depth 3</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (99 ms vs. 74 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 MB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 16 values at depth 5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (68 ms vs. 130 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (10 MB vs. 36 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">Tuples with 64 values</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (119 ms vs. 61 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (11 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nested Tuples with 64 values at depth 3</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines vs. type-unstable)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (120 ms vs. 78 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (13 MB vs. 13 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">nested Tuples with 64 values at depth 5</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (135 ms vs. 96 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (17 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nested Tuples with 64 values at depth 7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (132 ms vs. 247 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (30 MB vs. 78 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuples with 1 value</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (17 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (3 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">Tuples with 2 values</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ns vs. 69 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 61 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuples with 4 values</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ns vs. 69 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (99 ms vs. 89 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (6 MB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nested Tuples with 4 values at depth 3</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines vs. 208 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (370 ns vs. 450 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (72 ms vs. 163 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (7 MB vs. 22 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuples with 16 values</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines vs. type-unstable)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (80 ns vs. 80 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (111 ms vs. 90 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (8 MB vs. 13 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nested Tuples with 16 values at depth 3</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines vs. 592 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (430 ns vs. 561 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (119 ms vs. 184 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (11 MB vs. 25 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nested Tuples with 16 values at depth 5</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines vs. 4 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (5 μs vs. 7 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (83 ms vs. 292 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (10 MB vs. 40 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">Tuples with 64 values</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (100 ns vs. 130 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (154 ms vs. 85 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (17 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nested Tuples with 64 values at depth 3</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (570 ns vs. 681 ns)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (123 ms vs. 188 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (11 MB vs. 26 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nested Tuples with 64 values at depth 5</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines vs. 12 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (6 μs vs. 9 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2 times less (131 ms vs. 342 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (14 MB vs. 43 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple unrolled_sum(var&quot;#self#&quot;, x) + unrolled_sum(log ∘ var&quot;#self#&quot;, x) else unrolled_sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">(map((x-&gt;if eltype(x) &lt;: Tuple sum(var&quot;#self#&quot;, x) + sum(log ∘ var&quot;#self#&quot;, x) else sum(x) end), (itr,)))[1]</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">2</td>\n      <td style = \"color: darkturquoise; text-align: left;\">nested Tuples with 64 values at depth 7</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (7 LLVM lines vs. 69 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (84 μs vs. 115 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">4 times less (98 ms vs. 486 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">6 times less (13 MB vs. 80 MB)</td>\n    </tr>\n  </tbody>\n</table>\n</div>","category":"page"},{"location":"comparison_tables/#Nested-Unrolled-Closures","page":"Comparison Tables","title":"Nested Unrolled Closures","text":"","category":"section"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"<div style=\"width: max(80vw, 100%)\">\n<table style = \"font-family: monospace; font-size: 70%;\">\n  <thead>\n    <tr class = \"header headerLastRow\">\n      <th style = \"text-align: left;\">Unrolled Expression</th>\n      <th style = \"text-align: left;\">Reference Expression</th>\n      <th style = \"text-align: left;\">Itr Type</th>\n      <th style = \"text-align: left;\">Itr Length</th>\n      <th style = \"text-align: left;\">Itr Contents</th>\n      <th style = \"text-align: left;\">Optimization</th>\n      <th style = \"text-align: left;\">Run Time</th>\n      <th style = \"text-align: left;\">Compilation Time</th>\n      <th style = \"text-align: left;\">Total Allocations</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"color: khaki; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;Base.setindex(itr′, !(itr′[i]), i)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: khaki; text-align: left;\">reduce(((itr′, i)-&gt;Base.setindex(itr′, !(itr′[i]), i)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: khaki; text-align: left;\">Tuple</td>\n      <td style = \"color: khaki; text-align: left;\">32</td>\n      <td style = \"color: khaki; text-align: left;\">Bools</td>\n      <td style = \"color: khaki; text-align: left;\">similar (9 LLVM lines)</td>\n      <td style = \"color: khaki; text-align: left;\">3 times less (60 ns vs. 220 ns)</td>\n      <td style = \"color: khaki; text-align: left;\">similar (122 ms vs. 145 ms)</td>\n      <td style = \"color: khaki; text-align: left;\">2 times more (23 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;Base.setindex(itr′, !(itr′[i]), i)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(((itr′, i)-&gt;Base.setindex(itr′, !(itr′[i]), i)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">33</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Bools</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (591 LLVM lines vs. 4 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 μs vs. 14 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (154 ms vs. 120 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;Base.setindex(itr′, !(itr′[i]), i)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(((itr′, i)-&gt;Base.setindex(itr′, !(itr′[i]), i)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: gray; text-align: left;\">StaticBitVector</td>\n      <td style = \"color: gray; text-align: left;\">256</td>\n      <td style = \"color: gray; text-align: left;\">Bools</td>\n      <td style = \"color: gray; text-align: left;\">similar (519 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (3 μs vs. 4 μs)</td>\n      <td style = \"color: gray; text-align: left;\">similar (140 ms vs. 114 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;Base.setindex(itr′, !(itr′[i]), i)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: gray; text-align: left;\">reduce(((itr′, i)-&gt;Base.setindex(itr′, !(itr′[i]), i)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: gray; text-align: left;\">StaticBitVector</td>\n      <td style = \"color: gray; text-align: left;\">257</td>\n      <td style = \"color: gray; text-align: left;\">Bools</td>\n      <td style = \"color: gray; text-align: left;\">similar (32 kB allocs)</td>\n      <td style = \"color: gray; text-align: left;\">similar (116 μs vs. 116 μs)</td>\n      <td style = \"color: gray; text-align: left;\">similar (146 ms vs. 132 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;unrolled_reduce(((itr′′, j)-&gt;Base.setindex(itr′′, !(itr′′[min(i, j)]), j)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">reduce(((itr′, i)-&gt;reduce(((itr′′, j)-&gt;Base.setindex(itr′′, !(itr′′[min(i, j)]), j)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">Bools</td>\n      <td style = \"color: royalblue; text-align: left;\">better (71 LLVM lines vs. 96 B allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">90 times less (60 ns vs. 5 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">2 times more (467 ms vs. 183 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">11 times more (151 MB vs. 13 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;unrolled_reduce(((itr′′, j)-&gt;Base.setindex(itr′′, !(itr′′[min(i, j)]), j)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">reduce(((itr′, i)-&gt;reduce(((itr′′, j)-&gt;Base.setindex(itr′′, !(itr′′[min(i, j)]), j)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">33</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Bools</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">fewer allocs (87 kB allocs vs. 136 kB allocs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (481 μs vs. 513 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (172 ms vs. 157 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (16 MB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;unrolled_reduce(((itr′′, j)-&gt;Base.setindex(itr′′, !(itr′′[min(i, j)]), j)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(((itr′, i)-&gt;reduce(((itr′′, j)-&gt;Base.setindex(itr′′, !(itr′′[min(i, j)]), j)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">StaticBitVector</td>\n      <td style = \"color: darkturquoise; text-align: left;\">256</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Bools</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (519 LLVM lines vs. 96 B allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (826 μs vs. 974 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (193 ms vs. 166 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (10 MB vs. 11 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;unrolled_reduce(((itr′′, j)-&gt;Base.setindex(itr′′, !(itr′′[min(i, j)]), j)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">reduce(((itr′, i)-&gt;reduce(((itr′′, j)-&gt;Base.setindex(itr′′, !(itr′′[min(i, j)]), j)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">StaticBitVector</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">257</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Bools</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">fewer allocs (8 MB allocs vs. 8 MB allocs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (30 ms vs. 31 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (203 ms vs. 170 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (18 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;unrolled_reduce(((itr′′, j)-&gt;unrolled_reduce(((itr′′′, k)-&gt;Base.setindex(itr′′′, !(itr′′′[min(i, j, k)]), k)), StaticOneTo(length(itr′′)); init = itr′′)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">reduce(((itr′, i)-&gt;reduce(((itr′′, j)-&gt;reduce(((itr′′′, k)-&gt;Base.setindex(itr′′′, !(itr′′′[min(i, j, k)]), k)), StaticOneTo(length(itr′′)); init = itr′′)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">Tuple</td>\n      <td style = \"color: royalblue; text-align: left;\">32</td>\n      <td style = \"color: royalblue; text-align: left;\">Bools</td>\n      <td style = \"color: royalblue; text-align: left;\">better (71 LLVM lines vs. 2 kB allocs)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (228 μs vs. 175 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">43 times more (9 s vs. 206 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">14 times more (220 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;unrolled_reduce(((itr′′, j)-&gt;unrolled_reduce(((itr′′′, k)-&gt;Base.setindex(itr′′′, !(itr′′′[min(i, j, k)]), k)), StaticOneTo(length(itr′′)); init = itr′′)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">reduce(((itr′, i)-&gt;reduce(((itr′′, j)-&gt;reduce(((itr′′′, k)-&gt;Base.setindex(itr′′′, !(itr′′′[min(i, j, k)]), k)), StaticOneTo(length(itr′′)); init = itr′′)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">33</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Bools</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">fewer allocs (3 MB allocs vs. 4 MB allocs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (15 ms vs. 16 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (198 ms vs. 180 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (20 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">unrolled_reduce(((itr′, i)-&gt;unrolled_reduce(((itr′′, j)-&gt;unrolled_reduce(((itr′′′, k)-&gt;Base.setindex(itr′′′, !(itr′′′[min(i, j, k)]), k)), StaticOneTo(length(itr′′)); init = itr′′)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">reduce(((itr′, i)-&gt;reduce(((itr′′, j)-&gt;reduce(((itr′′′, k)-&gt;Base.setindex(itr′′′, !(itr′′′[min(i, j, k)]), k)), StaticOneTo(length(itr′′)); init = itr′′)), StaticOneTo(length(itr′)); init = itr′)), StaticOneTo(length(itr)); init = itr)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">StaticBitVector</td>\n      <td style = \"color: darkturquoise; text-align: left;\">256</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Bools</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (519 LLVM lines vs. 12 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (221 ms vs. 246 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (248 ms vs. 179 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (14 MB vs. 14 MB)</td>\n    </tr>\n  </tbody>\n</table>\n</div>","category":"page"},{"location":"comparison_tables/#Empty-Iterators","page":"Comparison Tables","title":"Empty Iterators","text":"","category":"section"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"<div style=\"width: max(80vw, 100%)\">\n<table style = \"font-family: monospace; font-size: 70%;\">\n  <thead>\n    <tr class = \"header headerLastRow\">\n      <th style = \"text-align: left;\">Unrolled Expression</th>\n      <th style = \"text-align: left;\">Reference Expression</th>\n      <th style = \"text-align: left;\">Itr Type</th>\n      <th style = \"text-align: left;\">Itr Length</th>\n      <th style = \"text-align: left;\">Itr Contents</th>\n      <th style = \"text-align: left;\">Optimization</th>\n      <th style = \"text-align: left;\">Run Time</th>\n      <th style = \"text-align: left;\">Compilation Time</th>\n      <th style = \"text-align: left;\">Total Allocations</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_map(error, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">map(error, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">0</td>\n      <td style = \"color: indianred; text-align: left;\">nothing</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (29 ms vs. 24 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">23 times more (115 kB vs. 5 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">any(error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">0</td>\n      <td style = \"color: gray; text-align: left;\">nothing</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (16 kB vs. 30 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">all(error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">0</td>\n      <td style = \"color: gray; text-align: left;\">nothing</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (16 kB vs. 30 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach(error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">foreach(error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">0</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nothing</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">21 times less (16 kB vs. 343 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(error, itr; init = 0)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">reduce(error, itr; init = 0)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">0</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nothing</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (27 ms vs. 56 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (184 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">0</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nothing</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (83 kB vs. 177 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_accumulate(error, itr; init = 0)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">accumulate(error, itr; init = 0)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">0</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nothing</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (90 kB vs. 223 kB)</td>\n    </tr>\n  </tbody>\n</table>\n</div>","category":"page"},{"location":"comparison_tables/#Very-Long-Iterators","page":"Comparison Tables","title":"Very Long Iterators","text":"","category":"section"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"<div style=\"width: max(80vw, 100%)\">\n<table style = \"font-family: monospace; font-size: 70%;\">\n  <thead>\n    <tr class = \"header headerLastRow\">\n      <th style = \"text-align: left;\">Unrolled Expression</th>\n      <th style = \"text-align: left;\">Reference Expression</th>\n      <th style = \"text-align: left;\">Itr Type</th>\n      <th style = \"text-align: left;\">Itr Length</th>\n      <th style = \"text-align: left;\">Itr Contents</th>\n      <th style = \"text-align: left;\">Optimization</th>\n      <th style = \"text-align: left;\">Run Time</th>\n      <th style = \"text-align: left;\">Compilation Time</th>\n      <th style = \"text-align: left;\">Total Allocations</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"color: khaki; text-align: left;\">unrolled_sum(itr)</td>\n      <td style = \"color: khaki; text-align: left;\">sum(itr)</td>\n      <td style = \"color: khaki; text-align: left;\">Tuple</td>\n      <td style = \"color: khaki; text-align: left;\">2000</td>\n      <td style = \"color: khaki; text-align: left;\">Ints</td>\n      <td style = \"color: khaki; text-align: left;\">similar (293 LLVM lines)</td>\n      <td style = \"color: khaki; text-align: left;\">6 times less (140 ns vs. 941 ns)</td>\n      <td style = \"color: khaki; text-align: left;\">27 times more (1 s vs. 47 ms)</td>\n      <td style = \"color: khaki; text-align: left;\">80 times more (142 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_sum(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">sum(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">StaticOneTo</td>\n      <td style = \"color: royalblue; text-align: left;\">2000</td>\n      <td style = \"color: royalblue; text-align: left;\">Ints</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">19 times more (1 s vs. 57 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">55 times more (64 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_sum(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">sum(itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">StaticOneTo</td>\n      <td style = \"color: royalblue; text-align: left;\">9000</td>\n      <td style = \"color: royalblue; text-align: left;\">Ints</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 6 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: royalblue; text-align: left;\">1472 times more (84 s vs. 57 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">246 times more (283 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_sum(log, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">sum(log, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">2000</td>\n      <td style = \"color: indianred; text-align: left;\">Ints</td>\n      <td style = \"color: indianred; text-align: left;\">similar (10004 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (16 μs vs. 15 μs)</td>\n      <td style = \"color: indianred; text-align: left;\">20 times more (1 s vs. 51 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">45 times more (166 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_sum(log, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">sum(log, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">StaticOneTo</td>\n      <td style = \"color: royalblue; text-align: left;\">2000</td>\n      <td style = \"color: royalblue; text-align: left;\">Ints</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 19 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">299 times less (49 ns vs. 15 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">7 times more (652 ms vs. 83 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">22 times more (64 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: royalblue; text-align: left;\">unrolled_sum(log, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">sum(log, itr)</td>\n      <td style = \"color: royalblue; text-align: left;\">StaticOneTo</td>\n      <td style = \"color: royalblue; text-align: left;\">9000</td>\n      <td style = \"color: royalblue; text-align: left;\">Ints</td>\n      <td style = \"color: royalblue; text-align: left;\">better (optimized out vs. 19 LLVM lines)</td>\n      <td style = \"color: royalblue; text-align: left;\">1652 times less (40 ns vs. 66 μs)</td>\n      <td style = \"color: royalblue; text-align: left;\">53 times more (4 s vs. 83 ms)</td>\n      <td style = \"color: royalblue; text-align: left;\">101 times more (283 MB vs. 3 MB)</td>\n    </tr>\n  </tbody>\n</table>\n</div>","category":"page"},{"location":"comparison_tables/#Manual-vs.-Recursive-Unrolling","page":"Comparison Tables","title":"Manual vs. Recursive Unrolling","text":"","category":"section"},{"location":"comparison_tables/","page":"Comparison Tables","title":"Comparison Tables","text":"<div style=\"width: max(80vw, 100%)\">\n<table style = \"font-family: monospace; font-size: 70%;\">\n  <thead>\n    <tr class = \"header headerLastRow\">\n      <th style = \"text-align: left;\">Unrolled Expression</th>\n      <th style = \"text-align: left;\">Reference Expression</th>\n      <th style = \"text-align: left;\">Itr Type</th>\n      <th style = \"text-align: left;\">Itr Length</th>\n      <th style = \"text-align: left;\">Itr Contents</th>\n      <th style = \"text-align: left;\">Optimization</th>\n      <th style = \"text-align: left;\">Run Time</th>\n      <th style = \"text-align: left;\">Compilation Time</th>\n      <th style = \"text-align: left;\">Total Allocations</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 83 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 84 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 85 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 83 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (30 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (62 kB vs. 140 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (89 kB vs. 316 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (143 kB vs. 379 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (147 kB vs. 431 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (152 kB vs. 498 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (156 kB vs. 554 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (161 kB vs. 629 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (197 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 38 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (269 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">5962 times less (69 ns vs. 411 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (51 ms vs. 43 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">9 times less (891 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">256</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">10743 times less (150 ns vs. 2 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (60 ms vs. 67 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">10 times less (2 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 84 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 30 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 kB vs. 141 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (94 kB vs. 321 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (147 kB vs. 384 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (152 kB vs. 436 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 38 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (156 kB vs. 503 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (161 kB vs. 558 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (165 kB vs. 634 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (201 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 38 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (273 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (69 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">5908 times less (69 ns vs. 408 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (60 ms vs. 44 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">9 times less (896 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">256</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (133 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">9810 times less (160 ns vs. 2 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (81 ms vs. 69 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">10 times less (2 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 85 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (23 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (69 kB vs. 147 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (101 kB vs. 324 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (159 kB vs. 396 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (168 kB vs. 455 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (177 kB vs. 538 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 38 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (186 kB vs. 603 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (259 kB vs. 698 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 37 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (265 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (408 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (69 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">8015 times less (69 ns vs. 553 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (57 ms vs. 46 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">6 times less (1 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">256</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (133 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">14377 times less (150 ns vs. 2 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (82 ms vs. 72 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">6 times less (3 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 83 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 kB vs. 141 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (27 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (99 kB vs. 370 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (157 kB vs. 437 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (166 kB vs. 648 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 37 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (176 kB vs. 720 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 42 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (184 kB vs. 935 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (189 kB vs. 1010 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (224 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (296 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (69 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">7433 times less (69 ns vs. 513 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (60 ms vs. 65 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">9 times less (917 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">256</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (133 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">12128 times less (160 ns vs. 2 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (84 ms vs. 94 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">11 times less (2 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 84 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (96 kB vs. 141 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (103 kB vs. 375 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (162 kB vs. 437 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (171 kB vs. 653 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 42 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (180 kB vs. 720 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (189 kB vs. 940 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (193 kB vs. 1015 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (229 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (301 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (69 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">11088 times less (69 ns vs. 765 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (60 ms vs. 66 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">9 times less (922 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">256</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (133 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">15409 times less (160 ns vs. 2 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (82 ms vs. 94 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">11 times less (2 MB vs. 18 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 85 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (94 kB vs. 147 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (102 kB vs. 368 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (160 kB vs. 440 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 38 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (173 kB vs. 659 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (187 kB vs. 746 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (200 kB vs. 971 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (209 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (280 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (7 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 74 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (422 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">128</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (69 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">13970 times less (69 ns vs. 964 μs)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (57 ms vs. 68 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">6 times less (1 MB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumseagreen; text-align: left;\">UnrolledUtilities.unrolled_map_into_tuple(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">rec_unrolled_map(length, itr)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">256</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (133 LLVM lines w/ Const)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">19811 times less (160 ns vs. 3 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">similar (83 ms vs. 97 ms)</td>\n      <td style = \"color: mediumseagreen; text-align: left;\">7 times less (3 MB vs. 20 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 90 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (60 kB vs. 150 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (87 kB vs. 206 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (41 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (142 kB vs. 254 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (145 kB vs. 306 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ns vs. 69 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (149 kB vs. 354 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 25 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (153 kB vs. 407 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (156 kB vs. 456 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (42 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (186 kB vs. 884 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (244 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (593 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (1 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (92 kB vs. 151 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (96 kB vs. 295 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (42 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (153 kB vs. 352 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (159 kB vs. 395 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (165 kB vs. 452 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (171 kB vs. 496 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (177 kB vs. 555 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (224 kB vs. 982 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (321 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (53 ms vs. 40 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (896 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 56 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (2 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 90 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (70 kB vs. 159 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (103 kB vs. 298 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 40 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (165 kB vs. 364 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (175 kB vs. 412 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (186 kB vs. 484 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (196 kB vs. 534 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (270 kB vs. 614 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (289 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (456 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (1 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (3 MB vs. 15 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (85 kB vs. 151 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (87 kB vs. 207 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (143 kB vs. 254 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (146 kB vs. 307 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (150 kB vs. 355 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 25 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (154 kB vs. 408 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (157 kB vs. 457 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (187 kB vs. 885 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (44 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (245 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (594 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (1 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (96 kB vs. 151 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (104 kB vs. 349 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (165 kB vs. 406 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (176 kB vs. 604 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 37 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (186 kB vs. 662 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 41 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (196 kB vs. 861 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (202 kB vs. 919 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (249 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (345 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (919 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 80 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (2 MB vs. 15 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 90 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (99 kB vs. 159 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (112 kB vs. 352 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (178 kB vs. 423 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (192 kB vs. 621 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (207 kB vs. 697 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (221 kB vs. 899 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (231 kB vs. 979 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (314 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (481 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (1 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_any(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 84 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (3 MB vs. 17 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 90 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (63 kB vs. 151 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (92 kB vs. 296 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (149 kB vs. 353 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (155 kB vs. 396 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (161 kB vs. 454 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (167 kB vs. 498 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (173 kB vs. 556 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (220 kB vs. 985 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (53 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (317 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 38 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (893 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (2 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (90 kB vs. 151 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (91 kB vs. 213 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (42 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (146 kB vs. 257 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (42 ms vs. 25 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (150 kB vs. 313 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (153 kB vs. 357 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 25 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (157 kB vs. 415 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (161 kB vs. 460 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (190 kB vs. 889 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (248 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (599 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (1 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 90 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (63 kB vs. 159 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (90 kB vs. 217 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (37 ms vs. 28 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (145 kB vs. 274 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (149 kB vs. 331 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (152 kB vs. 393 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (156 kB vs. 453 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (224 kB vs. 523 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (189 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 41 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (247 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 40 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (598 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (1 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (55 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (92 kB vs. 151 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (94 kB vs. 224 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (149 kB vs. 270 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (153 kB vs. 325 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (156 kB vs. 371 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (42 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (160 kB vs. 427 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (164 kB vs. 474 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (193 kB vs. 903 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (43 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (251 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (602 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (1 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (27 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 89 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 26 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (90 kB vs. 151 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (92 kB vs. 213 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (147 kB vs. 257 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (150 kB vs. 314 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (154 kB vs. 358 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (42 ms vs. 24 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (158 kB vs. 416 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (161 kB vs. 461 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (41 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (191 kB vs. 890 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (42 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (249 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (600 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (1 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 kB vs. 90 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (21 ms vs. 27 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (88 kB vs. 159 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 ms vs. 26 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (90 kB vs. 217 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (38 ms vs. 29 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (146 kB vs. 274 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (149 kB vs. 331 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (153 kB vs. 394 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (38 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (157 kB vs. 454 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (37 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (160 kB vs. 523 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (190 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (39 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (248 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (599 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_all(isempty, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (1 MB vs. 14 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (66 kB vs. 88 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (99 kB vs. 93 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (44 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (73 kB vs. 91 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (66 kB vs. 88 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 ms vs. 48 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (72 kB vs. 136 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (100 kB vs. 258 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (64 ms vs. 50 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (153 kB vs. 305 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (157 kB vs. 341 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (161 kB vs. 389 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (164 kB vs. 426 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (168 kB vs. 475 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (197 kB vs. 836 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (66 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (256 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (67 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (606 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (73 ms vs. 75 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (1 MB vs. 13 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (99 kB vs. 93 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 48 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (102 kB vs. 140 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 53 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (105 kB vs. 263 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (67 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (158 kB vs. 310 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (162 kB vs. 346 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (165 kB vs. 394 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (74 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (169 kB vs. 431 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 63 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (172 kB vs. 480 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (201 kB vs. 841 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 53 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (260 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (70 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (610 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (72 ms vs. 80 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (1 MB vs. 13 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (44 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (73 kB vs. 91 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (80 kB vs. 142 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (112 kB vs. 268 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (61 ms vs. 52 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (169 kB vs. 324 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (178 kB vs. 365 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 53 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (186 kB vs. 426 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (194 kB vs. 470 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (266 kB vs. 539 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 65 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (265 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (395 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (1 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (71 ms vs. 92 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (2 MB vs. 13 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (66 kB vs. 88 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (111 kB vs. 151 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (128 kB vs. 367 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (66 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (196 kB vs. 428 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (213 kB vs. 612 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (231 kB vs. 674 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 73 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (248 kB vs. 859 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 69 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (252 kB vs. 907 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 73 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (281 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 74 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (339 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (68 ms vs. 81 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (688 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (75 ms vs. 102 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (1 MB vs. 13 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (99 kB vs. 93 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (116 kB vs. 156 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (133 kB vs. 371 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (200 kB vs. 432 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (66 ms vs. 57 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (218 kB vs. 617 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 58 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (235 kB vs. 678 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ns vs. 69 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (253 kB vs. 863 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (64 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (256 kB vs. 912 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (66 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (285 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (66 ms vs. 73 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (344 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (68 ms vs. 84 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (692 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (72 ms vs. 109 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (1 MB vs. 13 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (73 kB vs. 91 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 48 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (114 kB vs. 153 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (44 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (131 kB vs. 367 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (198 kB vs. 433 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 59 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (220 kB vs. 622 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (242 kB vs. 697 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (70 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (264 kB vs. 890 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 69 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (272 kB vs. 959 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 78 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (336 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 ms vs. 89 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (465 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (66 ms vs. 87 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (1 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_foreach((x-&gt;@assert(length(x) &lt;= 7)), itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (72 ms vs. 106 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (2 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 23 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 kB vs. 116 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 kB vs. 116 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (152 kB vs. 117 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 23 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 kB vs. 116 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (66 kB vs. 166 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (93 kB vs. 319 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (2 MB vs. 370 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">5</td>\n      <td style = \"color: indianred; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (2 MB vs. 588 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">6</td>\n      <td style = \"color: indianred; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 35 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 641 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">7</td>\n      <td style = \"color: indianred; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (51 ms vs. 41 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 862 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 41 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 916 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 72 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (51 ms vs. 128 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 kB vs. 116 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 kB vs. 166 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (93 kB vs. 319 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (51 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">5 times more (2 MB vs. 370 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">5</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (2 MB vs. 589 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">6</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (51 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 642 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">7</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 41 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 862 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 42 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 917 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 69 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (51 ms vs. 132 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (152 kB vs. 117 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (166 kB vs. 172 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 33 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (207 kB vs. 433 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (51 ms vs. 35 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (2 MB vs. 493 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">5</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 42 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 752 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">6</td>\n      <td style = \"color: indianred; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 52 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 819 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">7</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (16 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (12 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (20 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 50 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (52 ms vs. 91 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (36 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (55 ms vs. 179 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 23 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 kB vs. 116 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (25 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 kB vs. 166 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (94 kB vs. 319 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (2 MB vs. 404 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">5</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 35 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 689 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">6</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 846 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">7</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 80 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (50 ms vs. 248 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (2 MB vs. 19 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 24 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (89 kB vs. 116 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (91 kB vs. 166 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (94 kB vs. 353 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 28 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">4 times more (2 MB vs. 438 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">5</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (51 ms vs. 34 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 791 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">6</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 949 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">7</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 83 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (52 ms vs. 285 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (2 MB vs. 21 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (152 kB vs. 117 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (24 ms vs. 25 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (191 kB vs. 172 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (14 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 34 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (207 kB vs. 466 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">4</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (17 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 36 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">3 times more (2 MB vs. 561 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">5</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (20 LLVM lines)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (50 ms vs. 44 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (2 MB vs. 956 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">6</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (23 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (51 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">7</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (26 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 55 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (30 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (53 ms vs. 57 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 69 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (53 ms vs. 108 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (2 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_reduce(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (105 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (80 ns vs. 80 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (60 ms vs. 349 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (2 MB vs. 23 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (61 kB vs. 231 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (91 kB vs. 260 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (156 kB vs. 342 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (61 kB vs. 231 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (68 kB vs. 465 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (96 kB vs. 520 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (197 kB vs. 548 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ns vs. 70 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (203 kB vs. 605 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (208 kB vs. 635 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (214 kB vs. 666 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (220 kB vs. 696 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (268 kB vs. 947 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 56 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (363 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (91 kB vs. 260 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (93 kB vs. 491 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (96 kB vs. 520 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 38 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (197 kB vs. 549 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (203 kB vs. 605 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (208 kB vs. 635 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (215 kB vs. 666 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (220 kB vs. 696 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (268 kB vs. 947 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (363 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 27 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (156 kB vs. 342 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (11 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 29 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (173 kB vs. 743 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (16 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (216 kB vs. 861 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (21 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (327 kB vs. 957 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (31 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ms vs. 42 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (345 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (35 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 42 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (364 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (383 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (65 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (59 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (466 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (265 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (89 ns vs. 89 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (82 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (555 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (857 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (250 ns vs. 340 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (279 ms vs. 278 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (862 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (61 kB vs. 231 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (26 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (93 kB vs. 491 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (96 kB vs. 521 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (197 kB vs. 550 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (203 kB vs. 607 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (209 kB vs. 636 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (215 kB vs. 668 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (221 kB vs. 698 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (269 kB vs. 964 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (57 ms vs. 55 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (364 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (91 kB vs. 260 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 39 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (93 kB vs. 492 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 36 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5 times less (96 kB vs. 522 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 35 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (197 kB vs. 550 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (203 kB vs. 607 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (209 kB vs. 636 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ns vs. 70 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (55 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (215 kB vs. 668 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (221 kB vs. 698 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (56 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (269 kB vs. 964 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 54 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (364 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (24 ms vs. 28 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (156 kB vs. 342 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (13 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (25 ms vs. 32 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (199 kB vs. 769 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (20 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 50 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (26 ms vs. 30 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (217 kB vs. 862 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (58 ms vs. 31 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (328 kB vs. 959 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (347 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (53 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (365 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (68 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (69 ns vs. 69 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (384 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (86 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (89 ns vs. 80 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (66 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (404 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (513 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (331 ns vs. 421 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (188 ms vs. 179 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (559 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_accumulate_into_tuple(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_accumulate(tuple, itr, ())</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (2795 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (2 μs vs. 2 μs)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (1 s vs. 1 s)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (875 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (42 ms vs. 41 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (201 kB vs. 266 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (44 ms vs. 41 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (234 kB vs. 271 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (39 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (241 kB vs. 288 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (44 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (201 kB vs. 266 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (42 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (222 kB vs. 376 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">3</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (266 kB vs. 398 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (342 kB vs. 447 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">5</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (362 kB vs. 497 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">6</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (63 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (385 kB vs. 547 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">7</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (65 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (407 kB vs. 597 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (64 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (431 kB vs. 647 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (598 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (81 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (941 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">128</td>\n      <td style = \"color: silver; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: silver; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: silver; text-align: left;\">2 times more (153 ms vs. 54 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (3 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">256</td>\n      <td style = \"color: silver; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: silver; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: silver; text-align: left;\">3 times more (268 ms vs. 71 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (6 MB vs. 15 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (42 ms vs. 41 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (234 kB vs. 271 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (252 kB vs. 381 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">3</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (44 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (270 kB vs. 403 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (66 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (347 kB vs. 452 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">5</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (63 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (367 kB vs. 502 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">6</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (65 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (389 kB vs. 552 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">7</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (63 ms vs. 43 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (411 kB vs. 602 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (64 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (435 kB vs. 652 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (69 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (603 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (83 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (946 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">128</td>\n      <td style = \"color: silver; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: silver; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: silver; text-align: left;\">2 times more (151 ms vs. 53 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (3 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">256</td>\n      <td style = \"color: silver; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: silver; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: silver; text-align: left;\">3 times more (250 ms vs. 71 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (6 MB vs. 15 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (39 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (241 kB vs. 288 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (43 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (274 kB vs. 404 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">3</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (42 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (331 kB vs. 436 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">4</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (422 kB vs. 488 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">5</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (63 ms vs. 45 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (456 kB vs. 543 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">6</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (63 ms vs. 55 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (497 kB vs. 601 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">7</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (62 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (532 kB vs. 659 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (64 ms vs. 45 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (636 kB vs. 719 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (71 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (851 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (95 ms vs. 57 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: khaki; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: khaki; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: khaki; text-align: left;\">Tuple</td>\n      <td style = \"color: khaki; text-align: left;\">128</td>\n      <td style = \"color: khaki; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: khaki; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: khaki; text-align: left;\">125 times less (49 ns vs. 6 μs)</td>\n      <td style = \"color: khaki; text-align: left;\">3 times more (177 ms vs. 55 ms)</td>\n      <td style = \"color: khaki; text-align: left;\">similar (5 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: khaki; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: khaki; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: khaki; text-align: left;\">Tuple</td>\n      <td style = \"color: khaki; text-align: left;\">256</td>\n      <td style = \"color: khaki; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: khaki; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: khaki; text-align: left;\">244 times less (49 ns vs. 12 μs)</td>\n      <td style = \"color: khaki; text-align: left;\">4 times more (311 ms vs. 76 ms)</td>\n      <td style = \"color: khaki; text-align: left;\">similar (9 MB vs. 15 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (41 ms vs. 41 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (201 kB vs. 266 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (48 ms vs. 46 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (294 kB vs. 421 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (52 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (358 kB vs. 1001 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (75 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (484 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (80 ms vs. 75 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (549 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (85 ms vs. 85 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (618 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (89 ms vs. 94 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (685 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (92 ms vs. 43 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (710 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (97 ms vs. 54 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (881 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (110 ms vs. 76 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">128</td>\n      <td style = \"color: silver; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: silver; text-align: left;\">similar (41 ns vs. 40 ns)</td>\n      <td style = \"color: silver; text-align: left;\">3 times more (196 ms vs. 65 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (3 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">256</td>\n      <td style = \"color: silver; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: silver; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: silver; text-align: left;\">3 times more (309 ms vs. 102 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (6 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (42 ms vs. 42 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (234 kB vs. 271 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (47 ms vs. 47 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (299 kB vs. 426 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (61 ms vs. 59 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (362 kB vs. 1006 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (74 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (488 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (80 ms vs. 76 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (553 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (85 ms vs. 86 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (622 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (94 ms vs. 96 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (689 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: indianred; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: indianred; text-align: left;\">Tuple</td>\n      <td style = \"color: indianred; text-align: left;\">8</td>\n      <td style = \"color: indianred; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: indianred; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: indianred; text-align: left;\">2 times more (91 ms vs. 45 ms)</td>\n      <td style = \"color: indianred; text-align: left;\">similar (713 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (101 ms vs. 53 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (885 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (109 ms vs. 76 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (1 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">128</td>\n      <td style = \"color: silver; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: silver; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: silver; text-align: left;\">2 times more (190 ms vs. 65 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (3 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: silver; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: silver; text-align: left;\">Tuple</td>\n      <td style = \"color: silver; text-align: left;\">256</td>\n      <td style = \"color: silver; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: silver; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: silver; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: silver; text-align: left;\">2 times more (302 ms vs. 105 ms)</td>\n      <td style = \"color: silver; text-align: left;\">2 times less (6 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">1</td>\n      <td style = \"color: gray; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (39 ms vs. 44 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (241 kB vs. 288 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">2</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (50 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (46 ms vs. 51 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (357 kB vs. 461 kB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (53 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (447 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (73 ms vs. 71 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (598 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (81 ms vs. 80 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (695 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (85 ms vs. 90 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (797 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (60 ns vs. 60 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (91 ms vs. 99 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (895 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">8</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (92 ms vs. 48 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (934 kB vs. 1 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">16</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (49 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (101 ms vs. 65 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (1 MB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: gray; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: gray; text-align: left;\">Tuple</td>\n      <td style = \"color: gray; text-align: left;\">32</td>\n      <td style = \"color: gray; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: gray; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: gray; text-align: left;\">similar (60 ns vs. 49 ns)</td>\n      <td style = \"color: gray; text-align: left;\">similar (121 ms vs. 87 ms)</td>\n      <td style = \"color: gray; text-align: left;\">similar (2 MB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: khaki; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: khaki; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: khaki; text-align: left;\">Tuple</td>\n      <td style = \"color: khaki; text-align: left;\">128</td>\n      <td style = \"color: khaki; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: khaki; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: khaki; text-align: left;\">284 times less (49 ns vs. 14 μs)</td>\n      <td style = \"color: khaki; text-align: left;\">3 times more (242 ms vs. 68 ms)</td>\n      <td style = \"color: khaki; text-align: left;\">similar (5 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: khaki; text-align: left;\">UnrolledUtilities.unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: khaki; text-align: left;\">rec_unrolled_ifelse((x-&gt;length(x) &gt;= length(itr[end])), identity, error, itr)</td>\n      <td style = \"color: khaki; text-align: left;\">Tuple</td>\n      <td style = \"color: khaki; text-align: left;\">256</td>\n      <td style = \"color: khaki; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: khaki; text-align: left;\">similar (8 LLVM lines)</td>\n      <td style = \"color: khaki; text-align: left;\">1161 times less (49 ns vs. 57 μs)</td>\n      <td style = \"color: khaki; text-align: left;\">4 times more (429 ms vs. 107 ms)</td>\n      <td style = \"color: khaki; text-align: left;\">similar (10 MB vs. 16 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (28 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (179 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (31 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (219 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (193 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (29 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (179 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (28 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (188 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (29 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (219 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (283 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (291 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (52 ms vs. 67 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (299 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (306 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 68 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (314 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 69 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (375 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 76 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">15 times less (499 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 207 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">13792 times less (40 ns vs. 552 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (60 ms vs. 72 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (1 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">256</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical empty singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 806 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">51710 times less (40 ns vs. 2 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (74 ms vs. 75 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">3 times less (2 MB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (31 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (219 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (33 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (222 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (32 ms vs. 63 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (225 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 66 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (287 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 62 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (292 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (298 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 63 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (303 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 64 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (308 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 65 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (351 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (51 ms vs. 71 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">17 times less (436 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 69 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6 times less (942 kB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (75 ms vs. 70 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3 times less (2 MB vs. 6 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 43 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (193 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (196 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 45 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (224 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (286 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 46 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (291 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (296 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (301 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 49 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (371 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (47 ms vs. 56 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">19 times less (349 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 72 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">27 times less (434 kB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 18 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">243 times less (49 ns vs. 12 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (59 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">9 times less (941 kB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">256</td>\n      <td style = \"color: darkturquoise; text-align: left;\">identical nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 38 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">583 times less (40 ns vs. 23 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (73 ms vs. 63 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5 times less (2 MB vs. 9 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">empty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (28 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (179 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (32 ms vs. 73 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (267 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (32 ms vs. 86 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (270 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (50 ms vs. 91 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (333 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (49 ms vs. 101 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">9 times less (338 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (49 ms vs. 109 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (344 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (49 ms vs. 117 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (349 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (49 ms vs. 123 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (354 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (50 ms vs. 120 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (397 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (52 ms vs. 126 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">17 times less (482 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (63 ms vs. 125 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (989 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct empty &amp; nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (76 ms vs. 123 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (2 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (32 ms vs. 61 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8 times less (219 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (32 ms vs. 81 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (222 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (32 ms vs. 81 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (225 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 88 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (288 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (49 ms vs. 98 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">10 times less (293 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (49 ms vs. 106 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (298 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (49 ms vs. 116 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">11 times less (303 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (49 ms vs. 115 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (309 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (50 ms vs. 117 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">14 times less (352 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2 times less (51 ms vs. 123 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">18 times less (436 kB vs. 8 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">128</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (62 ms vs. 119 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7 times less (943 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">256</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (75 ms vs. 129 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4 times less (2 MB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">1</td>\n      <td style = \"color: mediumorchid; text-align: left;\">nonempty non-singleton Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (28 ms vs. 44 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (193 kB vs. 2 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">2</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (221 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">3</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (29 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">15 times less (224 kB vs. 3 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">4</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (45 ms vs. 47 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">12 times less (286 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">5</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 48 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">13 times less (292 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">6</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 50 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">14 times less (297 kB vs. 4 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">7</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 51 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">15 times less (302 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">8</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (46 ms vs. 52 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16 times less (308 kB vs. 5 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">16</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (48 ms vs. 60 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">21 times less (350 kB vs. 7 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: mediumorchid; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: mediumorchid; text-align: left;\">Tuple</td>\n      <td style = \"color: mediumorchid; text-align: left;\">32</td>\n      <td style = \"color: mediumorchid; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (optimized out)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (40 ns vs. 40 ns)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">similar (49 ms vs. 80 ms)</td>\n      <td style = \"color: mediumorchid; text-align: left;\">29 times less (435 kB vs. 12 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">128</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 557 kB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">1781 times less (40 ns vs. 71 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (59 ms vs. 65 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">10 times less (942 kB vs. 10 MB)</td>\n    </tr>\n    <tr>\n      <td style = \"color: darkturquoise; text-align: left;\">UnrolledUtilities.unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">rec_unrolled_ifelse(!isempty, identity, Returns(nothing), itr, StaticOneTo(length(itr)))</td>\n      <td style = \"color: darkturquoise; text-align: left;\">Tuple</td>\n      <td style = \"color: darkturquoise; text-align: left;\">256</td>\n      <td style = \"color: darkturquoise; text-align: left;\">distinct nonempty non-singleton Tuples</td>\n      <td style = \"color: darkturquoise; text-align: left;\">better (optimized out vs. 2 MB allocs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">5290 times less (40 ns vs. 212 μs)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">similar (73 ms vs. 68 ms)</td>\n      <td style = \"color: darkturquoise; text-align: left;\">7 times less (2 MB vs. 11 MB)</td>\n    </tr>\n  </tbody>\n</table>\n</div>","category":"page"}]
}
